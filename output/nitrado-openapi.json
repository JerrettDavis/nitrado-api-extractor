{
  "openapi": "3.1.1",
  "info": {
    "title": "Nitrado API",
    "description": "Official Nitrado API for managing game servers, domains, and other services",
    "version": "1.0.0",
    "contact": {
      "name": "Nitrado Support",
      "url": "https://nitrado.net/support"
    },
    "license": {
      "name": "Proprietary",
      "url": "https://nitrado.net/terms"
    }
  },
  "servers": [
    {
      "url": "https://api.nitrado.net",
      "description": "Nitrado API Server"
    }
  ],
  "paths": {
    "/company/stats": {
      "get": {
        "summary": "Get company stats",
        "description": "",
        "operationId": "CompanyCompanyStatsGetStats",
        "tags": [
          "Company"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/company/trustpilot": {
      "get": {
        "summary": "Get the trustpilot rating",
        "description": "",
        "operationId": "CompanyCompanyTrustpilotGetTrustpilot",
        "tags": [
          "Company"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/domain/{domain}/service": {
      "put": {
        "summary": "Add to Service",
        "description": "<p>Add a domain to a service (e.g. a Webspace).</p>\n\n**Deprecated:** Feature no longer available",
        "operationId": "DomainDomainDomainServiceAddtoService",
        "tags": [
          "Domain"
        ],
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The domain parameter"
          },
          {
            "name": "service_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "<p>the id of the service</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "deprecated": true,
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Remove from Service",
        "description": "<p>Remove the domain from assigned services (e.g. a Webspace).</p>\n\n**Deprecated:** Feature no longer available",
        "operationId": "DomainDomainDomainServiceRemovefromService",
        "tags": [
          "Domain"
        ],
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The domain parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "deprecated": true,
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/domain/{domain}/handle/{handle}": {
      "put": {
        "summary": "Change Domain handle",
        "description": "",
        "operationId": "HandleHandleChangeHandle",
        "tags": [
          "Domain"
        ],
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The domain parameter"
          },
          {
            "name": "handle",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The handle parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/domain/{domain}/nameserver": {
      "put": {
        "summary": "Change Nameserver",
        "description": "<p>If no nameserver has been provided, we are setting our standard nameserver.</p>",
        "operationId": "DomainNameserverChangeNameserver",
        "tags": [
          "Domain"
        ],
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The domain parameter"
          },
          {
            "name": "nameserver1",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Nameserver 1</p>"
          },
          {
            "name": "nameserver2",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Nameserver 2</p>"
          },
          {
            "name": "nameserver3",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Nameserver 3</p>"
          },
          {
            "name": "nameserver4",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Nameserver 4</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "get": {
        "summary": "Get nameservers",
        "description": "<p>List all nameservers</p>",
        "operationId": "DomainDomainDomainNameserverReturnsalistwithallnameservers",
        "tags": [
          "Domain"
        ],
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The domain parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/domain/{domain}/zone": {
      "put": {
        "summary": "Change DNS zone settings",
        "description": "<p>Change settings for your DNS zone</p>",
        "operationId": "DomainZoneChangeDNSSECmode",
        "tags": [
          "Domain"
        ],
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The domain parameter"
          },
          {
            "name": "dnssec",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>false for disabling DNSSEC, true for enabling it (we are using NSEC3)</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "get": {
        "summary": "Get settings for your DNS zone",
        "description": "<p>Returns settings of the DNS zone</p>",
        "operationId": "DomainDomainDomainZoneGetDNSSECmode",
        "tags": [
          "Domain"
        ],
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The domain parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/domain/{domain}/check": {
      "get": {
        "summary": "Check if Domain is free",
        "description": "",
        "operationId": "DomainDomainDomainCheckCheckForFree",
        "tags": [
          "Domain"
        ],
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The domain parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/domain/{domain}/auth_code": {
      "post": {
        "summary": "Create Domain Auth Code",
        "description": "",
        "operationId": "DomainDomainDomainAuthCodeCreateAuthCode",
        "tags": [
          "Domain"
        ],
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The domain parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Domain Auth Code",
        "description": "",
        "operationId": "DomainDomainDomainAuthCodeDeleteAuthCode",
        "tags": [
          "Domain"
        ],
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The domain parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "get": {
        "summary": "Get Domain Auth Code",
        "description": "",
        "operationId": "DomainDomainDomainAuthCodeGetAuthCode",
        "tags": [
          "Domain"
        ],
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The domain parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/domain/contact": {
      "post": {
        "summary": "Add Handle",
        "description": "",
        "operationId": "DomainDomainContactCreateContact",
        "tags": [
          "Domain"
        ],
        "parameters": [
          {
            "name": "contact[organization]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": ""
          },
          {
            "name": "contact[first_name]",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": ""
          },
          {
            "name": "contact[last_name]",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": ""
          },
          {
            "name": "contact[email]",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": ""
          },
          {
            "name": "contact[phone]",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": ""
          },
          {
            "name": "contact[fax]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": ""
          },
          {
            "name": "contact[street]",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": ""
          },
          {
            "name": "contact[postcode]",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": ""
          },
          {
            "name": "contact[city]",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": ""
          },
          {
            "name": "contact[state]",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": ""
          },
          {
            "name": "contact[country]",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "get": {
        "summary": "List Handles",
        "description": "",
        "operationId": "DomainDomainContactListContacts",
        "tags": [
          "Domain"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/domain/contact/{handle}": {
      "delete": {
        "summary": "Delete Handle",
        "description": "",
        "operationId": "DomainDomainContactHandleDeleteContact",
        "tags": [
          "Domain"
        ],
        "parameters": [
          {
            "name": "handle",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The handle parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "put": {
        "summary": "Update Handle",
        "description": "",
        "operationId": "DomainDomainContactHandleUpdateContact",
        "tags": [
          "Domain"
        ],
        "parameters": [
          {
            "name": "handle",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The handle parameter"
          },
          {
            "name": "contact[organization]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": ""
          },
          {
            "name": "contact[first_name]",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": ""
          },
          {
            "name": "contact[last_name]",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": ""
          },
          {
            "name": "contact[email]",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": ""
          },
          {
            "name": "contact[phone]",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": ""
          },
          {
            "name": "contact[fax]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": ""
          },
          {
            "name": "contact[street]",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": ""
          },
          {
            "name": "contact[postcode]",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": ""
          },
          {
            "name": "contact[city]",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": ""
          },
          {
            "name": "contact[state]",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": ""
          },
          {
            "name": "contact[country]",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": ""
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/domain/{domain}/records": {
      "delete": {
        "summary": "Delete a record",
        "description": "<p>Delete a DNS record</p>",
        "operationId": "DomainDomainDomainRecordsDeleteDNSrecords",
        "tags": [
          "Domain"
        ],
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The domain parameter"
          },
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>name of the record, e.g. &quot;@&quot; or &quot;web&quot;</p>"
          },
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>record type, e.g. &quot;A&quot;</p>"
          },
          {
            "name": "content",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>the record content, e.g. &quot;192.0.0.1&quot;, if empty all records of this type and name will be deleted</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "get": {
        "summary": "Get all DNS records",
        "description": "<p>Returns a list of all set DNS records. The mode indicates if a record was set by the customer or an automated task, e.g. when attaching another service to the domain.</p>",
        "operationId": "DomainDomainDomainRecordsGetallDNSrecords",
        "tags": [
          "Domain"
        ],
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The domain parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "post": {
        "summary": "Insert a record",
        "description": "<p>Insert a DNS record</p>",
        "operationId": "DomainRecordsInsertDNSrecords",
        "tags": [
          "Domain"
        ],
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The domain parameter"
          },
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>name of the record, e.g. &quot;@&quot; or &quot;web&quot;</p>"
          },
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>record type, e.g. &quot;A&quot;</p>"
          },
          {
            "name": "content",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>the record content, e.g. &quot;192.0.0.1&quot;</p>"
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>TTL for the whole rrset</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "put": {
        "summary": "Update a record",
        "description": "<p>Update a DNS record</p>",
        "operationId": "DomainDomainDomainRecordsUpdateDNSrecords",
        "tags": [
          "Domain"
        ],
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The domain parameter"
          },
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>name of the record after change, e.g. &quot;@&quot; or &quot;web&quot;</p>"
          },
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>record type after change, e.g. &quot;A&quot;</p>"
          },
          {
            "name": "content",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>the record content after change, e.g. &quot;192.0.0.1&quot;</p>"
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>TTL for the whole rrset</p>"
          },
          {
            "name": "name_old",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>name of the record before change, e.g. &quot;@&quot; or &quot;web&quot;</p>"
          },
          {
            "name": "type_old",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>record type before change, e.g. &quot;A&quot;</p>"
          },
          {
            "name": "content_old",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>the record content before change, e.g. &quot;192.0.0.1&quot;</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/domain/{domain}/redirects": {
      "delete": {
        "summary": "Delete a redirect",
        "description": "<p>Delete a redirect</p>",
        "operationId": "DomainDomainDomainRedirectsDeletearedirect",
        "tags": [
          "Domain"
        ],
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The domain parameter"
          },
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>the id of the redirect to be deleted, e.g. &quot;31&quot;</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "post": {
        "summary": "Insert a redirect",
        "description": "<p>Insert a redirect</p>",
        "operationId": "DomainRedirectsInsertaredirect",
        "tags": [
          "Domain"
        ],
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The domain parameter"
          },
          {
            "name": "subdomain",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>the subdomain that should be redirected, e.g. &quot;server&quot; or &quot;web&quot;. Use @ for the domain itself.</p>"
          },
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>redirect type, e.g. &quot;HTTPH&quot; or &quot;HTTPSF&quot;</p>"
          },
          {
            "name": "target",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>the redirect target, e.g. &quot;mywebsite.net&quot;</p>"
          },
          {
            "name": "pagetitle",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>pagetitle for frame redirects</p>"
          },
          {
            "name": "metadescription",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>meta description for frame redirects</p>"
          },
          {
            "name": "metakey",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>meta key for frame redirects</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "get": {
        "summary": "Lists all redirects",
        "description": "<p>Lists all redirects that are set for this domain</p>",
        "operationId": "DomainDomainDomainRedirectsListallredirects",
        "tags": [
          "Domain"
        ],
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The domain parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "put": {
        "summary": "Update a redirect",
        "description": "<p>Update a redirect</p>",
        "operationId": "DomainDomainDomainRedirectsUpdatearedirect",
        "tags": [
          "Domain"
        ],
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The domain parameter"
          },
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>the id of the redirect to be updated, e.g. &quot;31&quot;</p>"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>redirect type, e.g. &quot;HTTPH&quot; or &quot;HTTPSF&quot;</p>"
          },
          {
            "name": "target",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>the redirect target, e.g. &quot;mywebsite.net&quot;</p>"
          },
          {
            "name": "pagetitle",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>pagetitle for frame redirects</p>"
          },
          {
            "name": "metadescription",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>meta description for frame redirects</p>"
          },
          {
            "name": "metakey",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>meta key for frame redirects</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/domain/{domain}": {
      "delete": {
        "summary": "Set deletion mode for domain",
        "description": "<p>Set the mode how the domain should be deleted</p>",
        "operationId": "DomainDomainDomainDeletedomain",
        "tags": [
          "Domain"
        ],
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The domain parameter"
          },
          {
            "name": "delete",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>One of on_expire, asap (only .de), on_expire_and_lock, cancel (re-enables delegation)</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/domain/pricing/{domain}/extend": {
      "get": {
        "summary": "Extension Price",
        "description": "<p>This returns extension information for domain.</p>",
        "operationId": "DomainExtendDomainExtensionPrice",
        "tags": [
          "Domain"
        ],
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The domain parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/domain/pricing": {
      "get": {
        "summary": "Price list",
        "description": "<p>This endpoint returns the prices for each TLD. Prices are already converted to the user currency.</p>",
        "operationId": "DomainDomainPricingDomainPriceList",
        "tags": [
          "Domain"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/domain/{domain}/info": {
      "get": {
        "summary": "Domain info",
        "description": "",
        "operationId": "DomainDomainDomainInfoDomaininfo",
        "tags": [
          "Domain"
        ],
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The domain parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/domain/{domain}/extend": {
      "post": {
        "summary": "Extend Domain",
        "description": "",
        "operationId": "DomainExtendExtendDomain",
        "tags": [
          "Domain"
        ],
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The domain parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/domain/contact/{handle}/domains": {
      "get": {
        "summary": "List Domains for Handle",
        "description": "",
        "operationId": "DomainDomainContactHandleDomainsGetContactDomains",
        "tags": [
          "Domain"
        ],
        "parameters": [
          {
            "name": "handle",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The handle parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/domain": {
      "get": {
        "summary": "List all Domains",
        "description": "",
        "operationId": "DomainDomainListallDomains",
        "tags": [
          "Domain"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/domain/{domain}/notifications": {
      "get": {
        "summary": "Notifications",
        "description": "<p>Lists all current notifications for this domain</p>",
        "operationId": "DomainNotificationsNotifications",
        "tags": [
          "Domain"
        ],
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The domain parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/domain/{domain}/order": {
      "post": {
        "summary": "Order Domain",
        "description": "\n\n**Deprecated:** This is deprecated since we no longer offer this product",
        "operationId": "DomainOrderOrderDomain",
        "tags": [
          "Domain"
        ],
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The domain parameter"
          },
          {
            "name": "owner_c",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide a valid handle for the Domain owner.</p>"
          },
          {
            "name": "auth_code",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>If the domain is already registered, provide the auth code to transfer the domain.</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "deprecated": true,
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/domain/{domain}/record_types": {
      "get": {
        "summary": "Get record types",
        "description": "<p>List all available record types</p>",
        "operationId": "DomainDomainDomainRecordTypesReturnsalistwiththeavailablerecordtypes",
        "tags": [
          "Domain"
        ],
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The domain parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/domain/{domain}/redirect_types": {
      "get": {
        "summary": "Get redirect types",
        "description": "<p>List all available redirect types and a displaying value</p>",
        "operationId": "DomainDomainDomainRedirectTypesReturnsalistwiththeavailableredirecttypes",
        "tags": [
          "Domain"
        ],
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The domain parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "services/{service_id}/gameservers/games/arksa/featured_modded_maps": {
      "get": {
        "summary": "Featured_Modded_Maps",
        "description": "<p>Returns featured modded maps</p>",
        "operationId": "ArksaFeaturedModdedMapsFeaturedModdedMaps",
        "tags": [
          "Game_Arksa"
        ],
        "parameters": [
          {
            "name": "service_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The service_id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "services/{service_id}/gameservers/games/arksa/gen_cluster_id": {
      "get": {
        "summary": "Generate_ARK_cluster_id",
        "description": "<p>Returns unique cluster id</p>",
        "operationId": "GameArksaServicesServiceIdGameserversGamesArksaGenClusterIdGenerateARKclusterid",
        "tags": [
          "Game_Arksa"
        ],
        "parameters": [
          {
            "name": "service_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The service_id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "services/{service_id}/gameservers/games/arkse/gen_cluster_id": {
      "get": {
        "summary": "Generate_ARK_cluster_id",
        "description": "<p>Returns unique cluster id</p>",
        "operationId": "GameArkseServicesServiceIdGameserversGamesArkseGenClusterIdGenerateARKclusterid",
        "tags": [
          "Game_Arkse"
        ],
        "parameters": [
          {
            "name": "service_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The service_id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "services/{service_id}/gameservers/games/atlas/maps": {
      "get": {
        "summary": "Get Maps",
        "description": "<p>Returns a list of predefined maps to choose from.</p>",
        "operationId": "GameAtlasServicesServiceIdGameserversGamesAtlasMapsGetMaps",
        "tags": [
          "Game_Atlas"
        ],
        "parameters": [
          {
            "name": "service_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The service_id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "services/{service_id}/gameservers/games/atlas/mods": {
      "get": {
        "summary": "Get Mods",
        "description": "<p>Returns a list of mod IDs used in the Atlas. This mods can also be read from the Atlas config. So it makes no difference if you set the &quot;ModIDs&quot; field in the Atlas config or use this endpoint for convenience.</p>",
        "operationId": "GameAtlasServicesServiceIdGameserversGamesAtlasModsGetMods",
        "tags": [
          "Game_Atlas"
        ],
        "parameters": [
          {
            "name": "service_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The service_id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "services/{service_id}/gameservers/games/atlas/restart_all": {
      "post": {
        "summary": "Restart All",
        "description": "<p>Restarts all servers belonging to this main server's Atlas. Servers that are not assigned to grid spaces will be stopped, but not restarted.</p>",
        "operationId": "GameAtlasServicesServiceIdGameserversGamesAtlasRestartAllRestartAll",
        "tags": [
          "Game_Atlas"
        ],
        "parameters": [
          {
            "name": "service_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The service_id parameter"
          },
          {
            "name": "message",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>This message will be posted in the restart.log File.</p>"
          },
          {
            "name": "restart_message",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>This message will be posted in the Ingame Chat if available.</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "services/{service_id}/gameservers/games/atlas/set_map": {
      "post": {
        "summary": "Set Map",
        "description": "<p>Assign a predefined map to the server. This will automatically update the JSON config and also upload the map images to the main server.</p>",
        "operationId": "GameAtlasServicesServiceIdGameserversGamesAtlasSetMapSetMap",
        "tags": [
          "Game_Atlas"
        ],
        "parameters": [
          {
            "name": "service_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The service_id parameter"
          },
          {
            "name": "atlas_map_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "<p>The id of the map as returned by Get Maps</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "services/{service_id}/gameservers/games/atlas/set_mods": {
      "post": {
        "summary": "Set Mods",
        "description": "<p>Set the list of used mods (IDs). This is the same as writing the Atlas config yourself. So if you already have set up some mods in the &quot;ModIDs&quot; field, this endpoint works completely transparent for you.</p>",
        "operationId": "GameAtlasServicesServiceIdGameserversGamesAtlasSetModsSetMods",
        "tags": [
          "Game_Atlas"
        ],
        "parameters": [
          {
            "name": "service_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The service_id parameter"
          },
          {
            "name": "mod_ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "<p>the list of mod ids, separated with comma</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "services/{service_id}/gameservers/games/atlas/stop_all": {
      "post": {
        "summary": "Stop All",
        "description": "<p>Stops all servers belonging to this main server's Atlas.</p>",
        "operationId": "GameAtlasServicesServiceIdGameserversGamesAtlasStopAllStopAll",
        "tags": [
          "Game_Atlas"
        ],
        "parameters": [
          {
            "name": "service_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The service_id parameter"
          },
          {
            "name": "message",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>This message will be posted in the restart.log File.</p>"
          },
          {
            "name": "stop_message",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>This message will be posted in the Ingame Chat if available.</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/games/corekeeper": {
      "get": {
        "summary": "Details",
        "description": "",
        "operationId": "GameCoreKeeperServicesIdGameserversGamesCorekeeperDetails",
        "tags": [
          "Game_CoreKeeper"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "services/{service_id}/gameservers/games/last_oasis/useridentifier": {
      "post": {
        "summary": "Lastoasis Useridentifier",
        "description": "<p>Sets unique useridentifier</p>",
        "operationId": "LastOasisUseridentifierLastoasisUseridentifier",
        "tags": [
          "Game_Lastoasis"
        ],
        "parameters": [
          {
            "name": "service_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The service_id parameter"
          },
          {
            "name": "useridentifier",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Unique useridentifier from the game interface</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "services/{service_id}/gameservers/games/last_oasis_classic/useridentifier": {
      "post": {
        "summary": "Lastoasisclassic Useridentifier",
        "description": "<p>Sets unique useridentifier</p>",
        "operationId": "LastOasisClassicUseridentifierLastoasisclassicUseridentifier",
        "tags": [
          "Game_Lastoasisclassic"
        ],
        "parameters": [
          {
            "name": "service_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The service_id parameter"
          },
          {
            "name": "useridentifier",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Unique useridentifier from the game interface</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/games/minecraft": {
      "get": {
        "summary": "Details",
        "description": "",
        "operationId": "GameMinecraftServicesIdGameserversGamesMinecraftDetails",
        "tags": [
          "Game_Minecraft"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/games/minecraft/avatar": {
      "get": {
        "summary": "Profile - Avatar",
        "description": "",
        "operationId": "MinecraftAvatarMinecraftAvatar",
        "tags": [
          "Game_Minecraft"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "username",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Get the Avatar for this username.</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/games/minecraft/bungeecord": {
      "post": {
        "summary": "Bungeecord",
        "description": "",
        "operationId": "MinecraftBungeecordMinecraftBungeecord",
        "tags": [
          "Game_Minecraft"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "enabled",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "<p>1/0 if Bungeecord should be enabled.</p>"
          },
          {
            "name": "only",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "<p>1/0 if Bungeecord should run standalone without Gameserver.</p>"
          },
          {
            "name": "firewall",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Choose between off/on_self/on_ip.</p>"
          },
          {
            "name": "firewall_ip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Gameserver IP address if Firewall is set to on_ip.</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/games/minecraft/chunkfix": {
      "post": {
        "summary": "Chunkfix",
        "description": "<p>This endpoint starts a chunkfix and stopps the game server for some minutes. After the chunkfix the game server will be started again.</p>",
        "operationId": "MinecraftChunkfixMinecraftChunkfix",
        "tags": [
          "Game_Minecraft"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "world",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Minecraft World name for Chunkfix (folder/worldname).</p>"
          },
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "<p>Chunkfix Limit.</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/games/minecraft/mcmyadmin": {
      "post": {
        "summary": "McMyAdmin",
        "description": "\n\n**Deprecated:** This feature is no longer supported",
        "operationId": "MinecraftMcmyadminMinecraftMcMyAdmin",
        "tags": [
          "Game_Minecraft"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "enabled",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "<p>1/0 Enables the McMyAdmin Web panel.</p>"
          },
          {
            "name": "username",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Defines the username for the web panel.</p>"
          },
          {
            "name": "password",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Defines the password for the web panel.</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "deprecated": true,
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/games/minecraft/overviewmap_log": {
      "get": {
        "summary": "Overview Map - Log",
        "description": "",
        "operationId": "MinecraftOverviewmapLogMinecraftOverviewMapLog",
        "tags": [
          "Game_Minecraft"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/games/minecraft/overviewmap_render": {
      "post": {
        "summary": "Overview Map - Render",
        "description": "",
        "operationId": "MinecraftOverviewmapRenderMinecraftOverviewMapRender",
        "tags": [
          "Game_Minecraft"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/games/minecraft/overviewmap": {
      "post": {
        "summary": "Overview Map - Settings",
        "description": "",
        "operationId": "GameMinecraftServicesIdGameserversGamesMinecraftOverviewmapMinecraftOverviewMapSettings",
        "tags": [
          "Game_Minecraft"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "enabled",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "<p>1/0 Enables the Overview Map.</p>"
          },
          {
            "name": "version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>[post_1.13 OR pre_1.13] sets the version of the rendered map.</p>"
          },
          {
            "name": "reset",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "<p>1/0 Resets the Overview Map.</p>"
          },
          {
            "name": "ipsonly",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>An array of ips which can view the Overview Map.</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/games/minecraft/paper_migrate": {
      "post": {
        "summary": "Migrate to PaperMC",
        "description": "<p>This endpoint is used to try a migration from Vanilla to PaperMC while keeping the savegame.</p>",
        "operationId": "MinecraftPaperMigrateMinecraftPaperMigrate",
        "tags": [
          "Game_Minecraft"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/games/minecraft/uuid": {
      "get": {
        "summary": "Profile - UUID",
        "description": "",
        "operationId": "MinecraftUuidMinecraftUUID",
        "tags": [
          "Game_Minecraft"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "username",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Get the UUID for this username.</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/games/minecraft/change_version": {
      "post": {
        "summary": "Change Version",
        "description": "",
        "operationId": "MinecraftChangeVersionMinecraftVersionChange",
        "tags": [
          "Game_Minecraft"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "md5",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Install the Minecraft Version with this MD5 hash.</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/games/valheim": {
      "get": {
        "summary": "Details",
        "description": "",
        "operationId": "GameValheimServicesIdGameserversGamesValheimDetails",
        "tags": [
          "Game_Valheim"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/game/list": {
      "get": {
        "summary": "Get list of the games info",
        "description": "<p>Returns a list for the games info</p>",
        "operationId": "GameGameListgamelist",
        "tags": [
          "Game"
        ],
        "parameters": [
          {
            "name": "language",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Defines the language for the offer page</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/game/list_auth": {
      "get": {
        "summary": "Get list of the games info",
        "description": "<p>Returns a list for the games info</p>",
        "operationId": "GameGameListAuthgamelistauth",
        "tags": [
          "Game"
        ],
        "parameters": [
          {
            "name": "display_mode",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "<p>Define which data should be displayed. One of public|hidden. &quot;hidden&quot; only works for admins.</p>"
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Defines the language for the offer page</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/backups": {
      "get": {
        "summary": "Backup - List Backups",
        "description": "",
        "operationId": "GameserverServicesIdGameserversBackupsBackupList",
        "tags": [
          "Gameserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/boost/history": {
      "get": {
        "summary": "Boost History",
        "description": "<p>This endpoint shows all server boosts. This endpoint is only supported for UWP services.</p>",
        "operationId": "BoostHistoryBoostHistory",
        "tags": [
          "GameserverBoosting"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "<p>Page number for pagination.</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/boost": {
      "put": {
        "summary": "Update Boost Settings",
        "description": "<p>Here can you change all server boost settings. This endpoint is only supported for UWP services.</p>",
        "operationId": "GameserverBoostingServicesIdGameserversBoostBoostSettings",
        "tags": [
          "GameserverBoosting"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "enable",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "<p>0 enables, 1 disables the boost support.</p>"
          },
          {
            "name": "message",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>A message which will be displayed to the user after boosting your service.</p>"
          },
          {
            "name": "welcome_message",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>A message which will be displayed before the user starts boosting your service.</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "get": {
        "summary": "Get Boost Settings",
        "description": "",
        "operationId": "GameserverBoostingServicesIdGameserversBoostListBoostSettings",
        "tags": [
          "GameserverBoosting"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/packages/uninstall": {
      "delete": {
        "summary": "Package - Uninstallation",
        "description": "<p>Triggers a package uninstallation</p>",
        "operationId": "GameserverServicesIdGameserversPackagesUninstallDeleteServicesIdGameserversPackagesUninstall",
        "tags": [
          "Gameserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "package",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>The package which should be uninstalled</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/settings": {
      "delete": {
        "summary": "Settings - Reset",
        "description": "",
        "operationId": "GameserverServicesIdGameserversSettingsDeleteSetting",
        "tags": [
          "Gameserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "get": {
        "summary": "Settings - Read",
        "description": "<p>Return all known settings for the current game installed on the service.</p>",
        "operationId": "GameserverServicesIdGameserversSettingsReadSettings",
        "tags": [
          "Gameserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "post": {
        "summary": "Settings - Update",
        "description": "",
        "operationId": "GameserverServicesIdGameserversSettingsUpdateSetting",
        "tags": [
          "Gameserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "category",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>The setting category.</p>"
          },
          {
            "name": "key",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>The setting key.</p>"
          },
          {
            "name": "value",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>The new setting value.</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers": {
      "get": {
        "summary": "Gameserver Details",
        "description": "<h3>Status codes</h3> <table> <tr>   <th>Status</th>   <th>Description</th> </tr> <tr>   <td>started</td>   <td>The Server is up and running.</td> </tr> <tr>   <td>stopped</td>   <td>The Server is stopped.</td> </tr> <tr>   <td>stopping</td>   <td>The Server is currently stopping.</td> </tr> <tr>   <td>restarting</td>   <td>The Server is currently restarting. This can take some minutes.</td> </tr> <tr>   <td>suspended</td>   <td>Will be returned if the server is suspended, which means it needs to be reactivated on the website.</td> </tr> <tr>   <td>guardian_locked</td>   <td>If your services are guardian protected, you are currently outside of the allowed times.</td> </tr> <tr>   <td>gs_installation</td>   <td>The server is currently performing a game switching action.</td> </tr> <tr>   <td>backup_restore</td>   <td>A backup will be restored now.</td> </tr> <tr>   <td>backup_creation</td>   <td>A new backup will be created now.</td> </tr> <tr>   <td>chunkfix</td>   <td>The Server is running a Minecraft chunkfix.</td> </tr> <tr>   <td>overviewmap_render</td>   <td>The Server is running a Minecraft Overview Map rendering.</td> </tr> </table> <h3>List of possible gameserver types:</h3> <ul> <li>Gameserver</li> </ul> <h3>List of possible memory types:</h3> <ul> <li>Standard</li> <li>Advanced</li> <li>Professional</li> <li>Ultimate</li> </ul>",
        "operationId": "GameserverServicesIdGameserversDetails",
        "tags": [
          "Gameserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/ftp/password": {
      "post": {
        "summary": "FTP - Change password",
        "description": "",
        "operationId": "FtpPasswordFTPPassword",
        "tags": [
          "Gameserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "password",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>The new FTP user password.</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/file_server/bookmarks": {
      "get": {
        "summary": "Files - Bookmarks",
        "description": "",
        "operationId": "FileServerBookmarksGameserverFilesBookmarks",
        "tags": [
          "Gameserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/file_server/copy": {
      "post": {
        "summary": "Files - Copy",
        "description": "",
        "operationId": "FileServerCopyGameserverFilesCopy",
        "tags": [
          "Gameserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "source_path",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Source directory or file</p>"
          },
          {
            "name": "target_path",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Target directory path</p>"
          },
          {
            "name": "target_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Target name of directory or file</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/file_server/delete": {
      "delete": {
        "summary": "Files - Delete",
        "description": "",
        "operationId": "GameserverServicesIdGameserversFileServerDeleteGameserverFilesDelete",
        "tags": [
          "Gameserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "path",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Path or directory to delete</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/file_server/download": {
      "get": {
        "summary": "Files - Download",
        "description": "",
        "operationId": "GameserverServicesIdGameserversFileServerDownloadGameserverFilesDownload",
        "tags": [
          "Gameserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "file",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Path to the File</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/file_server/list": {
      "get": {
        "summary": "Files - List",
        "description": "",
        "operationId": "GameserverServicesIdGameserversFileServerListGameserverFilesList",
        "tags": [
          "Gameserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "dir",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Directory to list</p>"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Search pattern for specific files</p>"
          },
          {
            "name": "summarize_folders",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "<p>Summarize disk usage of folders. Increases response time.</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/file_server/mkdir": {
      "post": {
        "summary": "Files - Create directory",
        "description": "",
        "operationId": "FileServerMkdirGameserverFilesMkdir",
        "tags": [
          "Gameserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "path",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Target directory path</p>"
          },
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Name of the new directory</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/file_server/move": {
      "post": {
        "summary": "Files - Move / Rename",
        "description": "",
        "operationId": "FileServerMoveGameserverFilesMove",
        "tags": [
          "Gameserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "source_path",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Source path of the directory or file</p>"
          },
          {
            "name": "target_path",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Target directory path</p>"
          },
          {
            "name": "target_filename",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Specify the file name if the source_path is a file</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/file_server/seek": {
      "get": {
        "summary": "Files - Seek",
        "description": "",
        "operationId": "FileServerSeekGameserverFilesSeek",
        "tags": [
          "Gameserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "file",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Path to the file</p>"
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "<p>File offset in bytes. Negativ value indicates a offset from file end</p>"
          },
          {
            "name": "length",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "<p>Set chunk length. Is only a maximum, returned data can be smaller</p>"
          },
          {
            "name": "mode",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Choose between 'raw' and 'lines'. 'lines' mode tries to read file line by line and 'raw' by byte offset</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/file_server/size": {
      "get": {
        "summary": "Files - Size",
        "description": "",
        "operationId": "FileServerSizeGameserverFilesSize",
        "tags": [
          "Gameserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "path",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Calculates the size of this directory or file</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/file_server/stat": {
      "get": {
        "summary": "Files - Stat",
        "description": "",
        "operationId": "FileServerStatGameserverFilesStat",
        "tags": [
          "Gameserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "files",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "<p>Array with File paths</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/file_server/upload": {
      "post": {
        "summary": "Files - Upload",
        "description": "",
        "operationId": "GameserverServicesIdGameserversFileServerUploadGameserverFilesUpload",
        "tags": [
          "Gameserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "path",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Target directory path for the Upload</p>"
          },
          {
            "name": "file",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Target file name</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/gameserver/games": {
      "get": {
        "summary": "Full Game list",
        "description": "<p>The full game list returns all available games at Nitrado.net.</p> <p>If you like to see which games are supported on your server, please refer to the &quot;Game List&quot;.</p>",
        "operationId": "GameserverGameserverGamesGameserverFullGameList",
        "tags": [
          "Gameserver"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/games/uninstall": {
      "delete": {
        "summary": "Game - Uninstall",
        "description": "",
        "operationId": "GameserverServicesIdGameserversGamesUninstallGameserverGameDelete",
        "tags": [
          "Gameserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "game",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide the Folder Short of the specific game.</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/games/install": {
      "post": {
        "summary": "Game - Install",
        "description": "",
        "operationId": "GamesInstallGameserverGameInstall",
        "tags": [
          "Gameserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "game",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide the Folder Short of the specific game.</p>"
          },
          {
            "name": "modpack",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide the file name of the Modpack.</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/games": {
      "get": {
        "summary": "Game - List",
        "description": "<p>This is a list will all supported games for your Server.</p> <p>If you like to see which games are available at Nitrado.net , please refer to the &quot;Full Game list&quot;.</p>",
        "operationId": "GameserverServicesIdGameserversGamesGameserverGameList",
        "tags": [
          "Gameserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/games/start": {
      "post": {
        "summary": "Game - Start",
        "description": "",
        "operationId": "GameserverServicesIdGameserversGamesStartGameserverGameRestart",
        "tags": [
          "Gameserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "game",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide the Folder Short of the specific game.</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/packages": {
      "get": {
        "summary": "Package - List",
        "description": "<p>This is a list will all supported packages by service game</p>",
        "operationId": "GameserverServicesIdGameserversPackagesGetServicesIdGameserversPackages",
        "tags": [
          "Gameserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/mysql/password": {
      "post": {
        "summary": "MySQL - Change password",
        "description": "",
        "operationId": "MysqlPasswordMySQLPassword",
        "tags": [
          "Gameserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "password",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>The new MySQL database password.</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/mysql/reset": {
      "post": {
        "summary": "MySQL - Reset database",
        "description": "",
        "operationId": "GameserverServicesIdGameserversMysqlResetMySQLReset",
        "tags": [
          "Gameserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "password",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>The new MySQL database password.</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/app_server": {
      "get": {
        "summary": "App Server - Ping",
        "description": "<p>This command actives the stdout forward to the web socket for 3 minutes. It also forwards the last 150 output lines to the web socket.</p>",
        "operationId": "GameserversAppServerPingConsole",
        "tags": [
          "Gameserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "command",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>The command which will be sent to the server console.</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/packages/install": {
      "post": {
        "summary": "Package - Installation",
        "description": "<p>Triggers a package installation</p>",
        "operationId": "GameserverServicesIdGameserversPackagesInstallPostServicesIdGameserversPackagesInstall",
        "tags": [
          "Gameserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "package",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>The package which should be installed</p>"
          },
          {
            "name": "version",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>The version which should be installed</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/packages/reinstall": {
      "put": {
        "summary": "Package - Reinstallation",
        "description": "<p>Triggers a package reinstallation</p>",
        "operationId": "GameserverServicesIdGameserversPackagesReinstallPutServicesIdGameserversPackagesReinstall",
        "tags": [
          "Gameserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "package",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>The package which should be reinstalled</p>"
          },
          {
            "name": "version",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>The version which should be reinstalled</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/restart": {
      "post": {
        "summary": "Restart",
        "description": "",
        "operationId": "GameserverServicesIdGameserversRestartRestart",
        "tags": [
          "Gameserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "message",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>This message will be posted in the restart.log File.</p>"
          },
          {
            "name": "restart_message",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>This message will be posted in the Ingame Chat if available.</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/backups/database": {
      "post": {
        "summary": "Backup - Restore Database",
        "description": "",
        "operationId": "BackupsDatabaseRestoreDatabaseBackup",
        "tags": [
          "Gameserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "database",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Database name</p>"
          },
          {
            "name": "timestamp",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Backup Timestamp</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/backups/gameserver": {
      "post": {
        "summary": "Backup - Restore Game Server",
        "description": "",
        "operationId": "BackupsGameserverRestoreGameserverBackup",
        "tags": [
          "Gameserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "folder",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Directory to restore</p>"
          },
          {
            "name": "backup",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Backup number ID</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/app_server/command": {
      "post": {
        "summary": "App Server - Command",
        "description": "",
        "operationId": "GameserverServicesIdGameserversAppServerCommandSendCommand",
        "tags": [
          "Gameserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "command",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>The command which will be sent to the server console.</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/settings/defaults": {
      "get": {
        "summary": "Settings - Defaults",
        "description": "<p>Return default settings for the current game installed on the service. The default settings are stored in groups, similar to the resulting array for the settings. This way the mapping between the settings and the default values can be made. The default value will be used to initially create the setting, if the user do not provide a initial value. This endpoint delivers the initial value, even if the setting is overwritten by the user. You can use this to create a diff between the actual settings and the defaults to determine the changes or provide a way to reset the setting back to the default value.</p>",
        "operationId": "GameserverServicesIdGameserversSettingsDefaultsSettingDefaults",
        "tags": [
          "Gameserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/settings/sets": {
      "post": {
        "summary": "Setting Sets - Create",
        "description": "",
        "operationId": "GameserverServicesIdGameserversSettingsSetsSettingSetCreate",
        "tags": [
          "Gameserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>A name for the new set.</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "get": {
        "summary": "Setting Sets - List",
        "description": "<p>The content of the config files is gzipped and then base64 encoded. To read the contents, base64 decode the file and then use gzip to decompress it. This is is done to ensure transportation safety and to reduce the required storage space. If the version is missing (or 1), only what is the &quot;settings&quot; block here is contained in the data block.</p>",
        "operationId": "GameserverServicesIdGameserversSettingsSetsSettingSetList",
        "tags": [
          "Gameserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/settings/sets/{set_id}": {
      "delete": {
        "summary": "Setting Sets - Delete",
        "description": "",
        "operationId": "GameserverServicesIdGameserversSettingsSetsSetIdSettingSetDelete",
        "tags": [
          "Gameserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "set_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The set_id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/settings/sets/{set_id}/restore": {
      "post": {
        "summary": "Setting Sets - Restore",
        "description": "",
        "operationId": "GameserverServicesIdGameserversSettingsSetsSetIdRestoreSettingSetRestore",
        "tags": [
          "Gameserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "set_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The set_id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/stats": {
      "get": {
        "summary": "Resource Usage",
        "description": "",
        "operationId": "GameserversStatsStats",
        "tags": [
          "Gameserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "hours",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "<p>Request usage statistics for the last X hours.</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/stop": {
      "post": {
        "summary": "Stop",
        "description": "",
        "operationId": "GameserverServicesIdGameserversStopStop",
        "tags": [
          "Gameserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "message",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>This message will be posted in the restart.log File.</p>"
          },
          {
            "name": "stop_message",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>This message will be posted in the Ingame Chat if available.</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/backups/restore_possible": {
      "get": {
        "summary": "restore_possible",
        "description": "<p>Returns true if backuprestore is possible</p>",
        "operationId": "BackupsRestorePossiblerestorepossible",
        "tags": [
          "Gameserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/geo/countrycodes": {
      "get": {
        "summary": "Countrycodes list",
        "description": "",
        "operationId": "CountryCodes",
        "tags": [
          "Geo"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/ping": {
      "get": {
        "summary": "Health Check for API",
        "description": "",
        "operationId": "DoPing",
        "tags": [
          "Global"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/maintenance": {
      "get": {
        "summary": "Maintenance status",
        "description": "",
        "operationId": "GlobalMaintenanceGetMaintenance",
        "tags": [
          "Global"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/version": {
      "get": {
        "summary": "Request current API version",
        "description": "",
        "operationId": "GlobalVersionGetVersion",
        "tags": [
          "Global"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/": {
      "get": {
        "summary": "Welcome message with docs",
        "description": "",
        "operationId": "GlobalGetWelcomeMessage",
        "tags": [
          "Global"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/knowledge_base": {
      "get": {
        "summary": "Get Knowledge Base Articles",
        "description": "<p>Get articles from the knowledge base regarding a specific topic, e.g. game.</p> <p>At least one of parameter must be set.</p>",
        "operationId": "KnowledgeBaseKnowledgeBaseGetKnowledgeBase",
        "tags": [
          "KnowledgeBase"
        ],
        "parameters": [
          {
            "name": "game",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>A game short, such as &quot;arkxb&quot;</p>"
          },
          {
            "name": "characteristic",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>An issue characteristic from the following list: undecided, restarting-or-crashing, not-installing, unreachable, not-found, no-connection, webinterface-unreachable, lagging, unexpected-rollbacks, data-loss, configuration, connection, kicked-connecting, kicked-playing, other</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/msapp/offer_packages": {
      "get": {
        "summary": "Get all MS App offer packages by game_short",
        "description": "<p>Returns the 3 (for pc only prepaid) or 6 (for xbox/xcross prepaid and subscription) defined MS App offer packages by game_short. If there are no packages defined, default packages are being returned (see last entry below without ID as an example).</p>",
        "operationId": "MSAppOfferPackagesMsappOfferPackagesGetMSAppofferpackages",
        "tags": [
          "MS_App_Offer_Packages"
        ],
        "parameters": [
          {
            "name": "game_short",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Game short to get packages for</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/user/newsletter_campaign/{nlc_id}/subscribe": {
      "post": {
        "summary": "Subscribe to newsletter campaign",
        "description": "",
        "operationId": "NlcIdSubscribeSubscribe",
        "tags": [
          "NewsletterCampaignSubscription"
        ],
        "parameters": [
          {
            "name": "nlc_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The nlc_id parameter"
          },
          {
            "name": "nlc_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "<p>Id of the newsletter campaign</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/user/newsletter_campaign/{nlc_id}/unsubscribe": {
      "post": {
        "summary": "Unsubscribe from newsletter campaign",
        "description": "",
        "operationId": "NlcIdUnsubscribeUnsubscribe",
        "tags": [
          "NewsletterCampaignSubscription"
        ],
        "parameters": [
          {
            "name": "nlc_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The nlc_id parameter"
          },
          {
            "name": "nlc_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "<p>Id of the newsletter campaign</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/notification_campaign/hide/{key}": {
      "post": {
        "summary": "Hide the given notification campaign for the current user",
        "description": "",
        "operationId": "HideKeyHideanotificationcampaign",
        "tags": [
          "Notification_Campaign"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The key parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/notification_campaign/user": {
      "get": {
        "summary": "List active notification campaigns for the current user",
        "description": "",
        "operationId": "NotificationCampaignNotificationCampaignUserListactivenotificationcampaigns",
        "tags": [
          "Notification_Campaign"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/notification/game_updates": {
      "get": {
        "summary": "Get notifications for game updates",
        "description": "<p>Returns notifications of the 20 latest game updates.</p>",
        "operationId": "NotificationNotificationGameUpdatesgameupdates",
        "tags": [
          "Notification"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/notification/services": {
      "get": {
        "summary": "Get public service notifications",
        "description": "<p>Returns all public service notifications.</p> <h3>Possible values for level</h3> <table> <tr>   <th>Level</th> </tr> <tr>   <td>SEVERE</td> </tr> <tr>   <td>WARNING</td> </tr> <tr>   <td>INFO</td> </tr> <tr>   <td>SUCCESS</td> </tr> </table> <h3>Possible values for product_type</h3> <table> <tr>   <td>domain</th> </tr> <tr>   <td>gameserver</td> </tr> <tr>   <td>voiceserver</td> </tr> <tr>   <td>rootserver</td> </tr> </table>",
        "operationId": "services",
        "tags": [
          "Notification"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/oauth/v2/update_token": {
      "get": {
        "summary": "OAuth2 Update Token Check",
        "description": "<p>Checks if the current browser session contains a valid update token. This call needs to be done in a browser context, e.g. via AJAX.</p>",
        "operationId": "OAuth2OauthV2UpdateTokenCheckUpdateToken",
        "tags": [
          "OAuth_2"
        ],
        "parameters": [
          {
            "name": "scope",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>scope the update token should contain, available: &quot;2fa_devices&quot;</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "post": {
        "summary": "OAuth2 Update Token Request",
        "description": "<p>Update token for editing U2F devices. The response will contain a Cookie in the request header. This Cookies is used for authentication and is strictly time limited. This call needs to be done in a browser context, e.g. via AJAX.</p>",
        "operationId": "OAuth2OauthV2UpdateTokenSetUpdateToken",
        "tags": [
          "OAuth_2"
        ],
        "parameters": [
          {
            "name": "password",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Password of the user</p>"
          },
          {
            "name": "scope",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Scope the update token should contain, available: &quot;2fa_devices&quot;</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/oauth/v2/token": {
      "post": {
        "summary": "OAuth2 Token Request",
        "description": "<p>OAuth2 Token Exchange Exchange an OAuth2 authorization or refresh token for an access token.</p> <p>Please refer to the auth endpoint docs for more details on our OAuth2 provider.</p> <p>This endpoint supports two different grant types: <code>authorization_code</code> and <code>refresh_token</code>.</p> <p>It returns an access and refresh token. The access token is the one you actually use to access the API and is valid for one day. The refresh token is valid for one month and you can use it to explicitly request new tokens using the endpoint.</p> <p>You typically call this endpoint with an <code>authorization_code</code> grant after your server-side application after redirected the user agent to the CreateAuthToken endpoint and received the callback.</p> <p><code>refresh_token</code> is only relevant if you use our provider to access a customer's account resources and store both access token and refresh code in your database.</p> <p>For security reasons, access tokens expire within a relatively short time frame. Refresh tokens are longer-lived and allow you to generate a new access token as long as the refresh token is valid, but require the <code>client_id</code>.</p> <p>Note that this replaces and thus invalidates both the current access token and the refresh code.</p> <p>If the refresh code expires before you renew it, you'll lose access and the user will have to grant authorization again. The same applies if a user revoked your client's access in his account settings.</p> <p>The <code>refresh_token</code> flow is irrelevant if you're only <strong>authenticating</strong> a user (&quot;login with Nitrado&quot;)!</p>",
        "operationId": "OAuth2OauthV2TokenCreateAccessToken",
        "tags": [
          "OAuth_2"
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Your OAuth Client ID</p>"
          },
          {
            "name": "client_secret",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Your OAuth Client secret (only necessary if you use the <code>authorization_code</code> grant type)</p>"
          },
          {
            "name": "grant_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>We support both <code>authorization_code</code> and <code>refresh_token</code>.</p>"
          },
          {
            "name": "refresh_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Your refresh token if you use grant_type &quot;refresh_token&quot;.</p>"
          },
          {
            "name": "code",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Your auth code if you use grant_type &quot;authorization_code&quot;.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "OAuth2 Expire Token",
        "description": "<p>Expires the given token and invalidates the refresh token.</p>",
        "operationId": "V2TokenExpireToken",
        "tags": [
          "OAuth_2"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/oauth/v2/auth": {
      "get": {
        "summary": "OAuth2 Auth Request",
        "description": "<p>Interactively prompt the user for OAuth2 authorization. Nitrado provides a standards-compliant OAuth2 provider in order to authorize access to our customer's Nitrado accounts.</p> <p>After authorization succeeded, the API redirects the user to the given <code>redirect_uri</code> with <code>code</code> and <code>state</code> as GET parameters.</p> <p>We only implement the OAuth2 code flow (explicit flow). Please refer to the available literature on how to (securely) use OAuth2.</p> <p>If you implement <strong>authentication</strong> (&quot;login with Nitrado&quot;) in addition to authorization (&quot;give me access to resources on a user's account&quot;), please be aware of OAuth's shortcomings in that regard. The mere possession of a valid access token/access to the identity endpoint is <strong>not</strong> sufficient!</p> <p>Every authentication must go through the auth endpoint. Only the act of successfully obtaining an access token and subsequently requesting the user info from the identify endpoint is sufficient proof of authentication.</p> <p>It is extremely important to validate the <code>state</code> parameter! If you do not validate it, your application is vulnerable to a trivial CSRF account take-over attack.</p> <p>These limitations are not specific to Nitrado, but inherently caused by the fact that OAuth2 is <em>not</em> - by and in itself - an authentication protocol (but an authorization protocol). The same concerns apply to any other 3rd party provider like Google or Facebook, so make sure that you apply the above to all external providers you integrate with.</p> <p>Please read RFC 6819 (&quot;OAuth 2.0 Threat Model and Security Considerations&quot;) for further information on OAuth 2.0 security.</p> <p>In order to prevent accidental mis-use, we refuse to provide an access token unless a <code>state</code> parameter is supplied.</p> <p>Our team is happy to help you with the details if you wish to integrate with us!</p>",
        "operationId": "OAuth2OauthV2AuthCreateAuthToken",
        "tags": [
          "OAuth_2"
        ],
        "parameters": [
          {
            "name": "redirect_uri",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Redirect to this URL after a failed or successful auth grant flow (must exactly match one of the redirect URIs configured for your client)</p>"
          },
          {
            "name": "client_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Your OAuth Client ID</p>"
          },
          {
            "name": "response_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>We only support the &quot;<code>code</code>&quot; response type.</p>"
          },
          {
            "name": "scope",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>A list with requested scopes (space separated). The user will be asked to authorized your client to access the scopes you requsted. If all you want is authentication (&quot;login with Nitrado&quot;), only the <code>user_info</code> scope is required and we do not recommend requesting any additional scopes beyond that.</p> <p>The following scopes are supported:</p> <ul> <li><code>user_info</code>: Access to a user's basic account information (username, email address, ...)</li> <li><code>service</code>: Access to a customers's rented services.</li> <li><code>service_order</code>: Access to billing-related endpoints.</li> <li><code>ssh_keys</code>: Access to user's ssh public keys.</li> </ul>"
          },
          {
            "name": "state",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Randomly generated string. Store this string in or otherwise tie it to your client's user session and validate that the <code>state</code> you get back with the redirect is identical. Otherwise, an attacker could trick a user into authenticating against his own client and then use the authorization code to gain access to yours.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/token/long_life_token": {
      "post": {
        "summary": "Create long-life token",
        "description": "<p>A long-life access token is valid for many years and can be used to place it inside scripts to automate different jobs via NitrAPI.</p> <p>It's really important that you keep this token secret and do not share it with other people.</p>",
        "operationId": "OAuth2TokenLongLifeTokenCreateLongLifeToken",
        "tags": [
          "OAuth_2"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>A user update token.</p>"
          },
          {
            "name": "client_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>OAuth 2.0 client id</p>"
          },
          {
            "name": "client_secret",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>OAuth 2.0 client secret</p>"
          },
          {
            "name": "description",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Attach a description for your long-life token.</p>"
          },
          {
            "name": "scope",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>A list of scopes (space separated), default all scopes from the parent token.</p>"
          },
          {
            "name": "service_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "<p>Optional a service id to limited the access token.</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "get": {
        "summary": "List long-life tokens",
        "description": "",
        "operationId": "OAuth2TokenLongLifeTokenListLongLifeTokens",
        "tags": [
          "OAuth_2"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/token/sub": {
      "post": {
        "summary": "Create a sub-token",
        "description": "<p>A sub token is a separate OAuth 2.0 access token generated from an existing token. It has no refresh token and will be invalidated if the parent token is invalidated. It is useful when you need a token that has fewer scopes, is limited to a single service or shorter expiry time.</p> <p>The token can have less or the same scopes as the parent token. Also you can limit the lifetime of the sub token. A sub-token can be also pinned to a specific service_id if needed.</p>",
        "operationId": "OAuth2TokenSubCreateSubToken",
        "tags": [
          "OAuth_2"
        ],
        "parameters": [
          {
            "name": "scope",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>A list with requested scopes (space separated).</p>"
          },
          {
            "name": "expires_in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "<p>Time in seconds how long the sub-token should be valid.</p>"
          },
          {
            "name": "service_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "<p>Limits the sub-token to a specific service id.</p>"
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "<p>User ID for sudoing into customers for employees.</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/token/long_life_token/{id}": {
      "delete": {
        "summary": "Delete long-life token",
        "description": "",
        "operationId": "OAuth2TokenLongLifeTokenIdDeleteLongLifeToken",
        "tags": [
          "OAuth_2"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/token": {
      "get": {
        "summary": "Token Info / Identity",
        "description": "<p>Returns basic information about the access token and the logged in user.</p> <p>If you're implementing <strong>authentication</strong> (&quot;login with Nitrado&quot;), you should use this endpoint in order to identify the user (user identity endpoint).</p> <p>A client must only use the user ID in order to identify a user since everything else can be changed by the user.</p>",
        "operationId": "OAuth2TokenRequestTokenInfo",
        "tags": [
          "OAuth_2"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/oauth/{id}": {
      "delete": {
        "summary": "delete OAuth client",
        "description": "",
        "operationId": "OAuthClientOauthIdDeleteOauthId",
        "tags": [
          "OAuth_Client"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>The current User Update Token.</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "get": {
        "summary": "show OAuth client",
        "description": "",
        "operationId": "OAuthClientOauthIdGetOauthId",
        "tags": [
          "OAuth_Client"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/oauth/": {
      "get": {
        "summary": "list OAuth clients",
        "description": "",
        "operationId": "OAuthClientOauthGetOauth",
        "tags": [
          "OAuth_Client"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/oauth/{id}/secret": {
      "put": {
        "summary": "generate new OAuth client secret",
        "description": "",
        "operationId": "OAuthClientOauthIdSecretPutOauthIdSecret",
        "tags": [
          "OAuth_Client"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>The current User Update Token.</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/oauth/v2/emergency_logout": {
      "get": {
        "summary": "EmergencyLogout",
        "description": "<p>Terminates all open sessions and invalidates access tokens (including long living tokens)</p>",
        "operationId": "V2EmergencyLogoutEmergencyLogout",
        "tags": [
          "Oauth_2"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>a token to authenticate</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/offer_pages": {
      "get": {
        "summary": "List offer pages",
        "description": "<p>Returns the list of offer pages.</p>",
        "operationId": "OfferpagesOfferPagesListofferpages",
        "tags": [
          "Offer_pages"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/order/order/gameserver": {
      "post": {
        "summary": "Gameserver",
        "description": "<p>You need also to provide the start game. Please choose a valid game from the games list.</p>",
        "operationId": "OrderGameserverOrderGameserver",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "dimensions[type]",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>The selected gameserver type.</p>"
          },
          {
            "name": "dimensions[slot]",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "<p>The slot amount from the price list.</p>"
          },
          {
            "name": "dimensions[upgrade]",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "<p>The RAM amount from the price list.</p>"
          },
          {
            "name": "additionals[game]",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>The initially selected game's portlist_short or the game's id from the games list.</p>"
          },
          {
            "name": "promo_code",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>A promotion code.</p>"
          },
          {
            "name": "additionals[prevent_first_start]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "<p>If true, the server will not be automatically started after being installed.</p>"
          },
          {
            "name": "modpack",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide the file name of the Modpack.</p>"
          },
          {
            "name": "location",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "<p>Select your location ID from the locations list.</p>"
          },
          {
            "name": "price",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "<p>Pass the price of your order. This is an additional check to prevent false orders.</p>"
          },
          {
            "name": "rental_time",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "<p>The selected rental time in hours.</p>"
          },
          {
            "name": "method",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>If you like to switch an existing service, choose &quot;switch&quot;. If you like to extend the service, choose &quot;extend&quot;.</p>"
          },
          {
            "name": "service_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "<p>If you switch or extend a service, you need to provide a service ID.</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/order/order/locations": {
      "get": {
        "summary": "Locations",
        "description": "<p>The location request lists all datacenter locations. You can determine which products are available and also get the id of each location.</p>",
        "operationId": "OrderLocationsOrderLocations",
        "tags": [
          "Order"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/order/order/teamspeak3": {
      "post": {
        "summary": "Teamspeak 3",
        "description": "",
        "operationId": "OrderTeamspeak3OrderTeamspeak3",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "parts[slot]",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "<p>The slot amount from the price list.</p>"
          },
          {
            "name": "location",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "<p>Select your location ID from the locations list.</p>"
          },
          {
            "name": "price",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "<p>Pass the price of your order. This is an additional check to prevent false orders.</p>"
          },
          {
            "name": "rental_time",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "<p>The selected rental time in hours.</p>"
          },
          {
            "name": "method",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>If you like to switch an existing service, choose &quot;switch&quot;. If you like to extend the service, choose &quot;extend&quot;.</p>"
          },
          {
            "name": "service_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "<p>If you switch or extend a service, you need to provide a service ID.</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/order/payment/all_payment_methods": {
      "get": {
        "summary": "All Payment methods",
        "description": "<p>Output all possible payment methods</p>",
        "operationId": "PaymentAllPaymentMethodsAllPaymentMethods",
        "tags": [
          "Payment"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/order/payment/charge_settings": {
      "get": {
        "summary": "Charge Settings",
        "description": "<p>Lists settings for a charge by currency.</p>",
        "operationId": "PaymentOrderPaymentChargeSettingsChargeSettings",
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "name": "currency",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>The currency to get the charge settings for, e.g. USD.</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/order/payment/charge": {
      "post": {
        "summary": "Charge account",
        "description": "<p>Creates a charge call. If it's successful you receive a link where you can redirect the user. The user will be redirected to the Nitrado website, the website redirects to the payment provider to finalize the payment.</p>",
        "operationId": "PaymentChargePaymentCharge",
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "name": "method",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Selected Payment Method, contains __payment_method_id for usetoken=true</p>"
          },
          {
            "name": "amount",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "<p>Amount in cents.</p>"
          },
          {
            "name": "country",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>2 Digits ISO country code for charge.</p>"
          },
          {
            "name": "bank",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Only needed for payment method gc_ideal</p>"
          },
          {
            "name": "tokenize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "<p>Tokenize the payment method</p>"
          },
          {
            "name": "usetoken",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "<p>Use the payment-token for the given payment-method (if available)</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/order/payment/countries": {
      "get": {
        "summary": "Countries",
        "description": "<p>Lists all supported countries for payment requests.</p>",
        "operationId": "PaymentCountriesPaymentCountries",
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/order/payment/payment_methods": {
      "get": {
        "summary": "Payment methods",
        "description": "<p>Lists all available payment methods for the current user. Sorted by priority.</p>",
        "operationId": "PaymentPaymentMethodsPaymentMethods",
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/order/payment/payment_method_support_data": {
      "get": {
        "summary": "Support Meta Data",
        "description": "<p>Lists the required data for support cases with different payment methods. Currently supported field types are &quot;text&quot; and &quot;file&quot;.</p>",
        "operationId": "PaymentPaymentMethodSupportDataPaymentMethodsSupportData",
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/games/adminlist": {
      "post": {
        "summary": "Add Player to Adminlist",
        "description": "",
        "operationId": "PlayerManagementServicesIdGameserversGamesAdminlistAddToAdminlist",
        "tags": [
          "Player_Management"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "identifier",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "<p>List of unique player identifiers (accepts comma or semicolon separated list too).</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "get": {
        "summary": "List Adminlist",
        "description": "",
        "operationId": "PlayerManagementServicesIdGameserversGamesAdminlistListAdminlist",
        "tags": [
          "Player_Management"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Remove Player from Adminlist",
        "description": "",
        "operationId": "PlayerManagementServicesIdGameserversGamesAdminlistRemoveFromAdminlist",
        "tags": [
          "Player_Management"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "identifier",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "<p>List of unique player identifiers (accepts comma or semicolon separated list too).</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/games/banlist": {
      "post": {
        "summary": "Add Player to Banlist",
        "description": "",
        "operationId": "PlayerManagementServicesIdGameserversGamesBanlistAddToBanlist",
        "tags": [
          "Player_Management"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "identifier",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "<p>List of unique player identifiers (accepts comma or semicolon separated list too).</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "get": {
        "summary": "List Banlist",
        "description": "",
        "operationId": "PlayerManagementServicesIdGameserversGamesBanlistListBanlist",
        "tags": [
          "Player_Management"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Remove Player from Banlist",
        "description": "",
        "operationId": "PlayerManagementServicesIdGameserversGamesBanlistRemoveFromBanlist",
        "tags": [
          "Player_Management"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "identifier",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "<p>List of unique player identifiers (accepts comma or semicolon separated list too).</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/games/whitelist": {
      "post": {
        "summary": "Add Player to Whitelist",
        "description": "",
        "operationId": "PlayerManagementServicesIdGameserversGamesWhitelistAddToWhitelist",
        "tags": [
          "Player_Management"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "identifier",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "<p>List of unique player identifiers (accepts comma or semicolon separated list too).</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "get": {
        "summary": "List Whitelist",
        "description": "",
        "operationId": "PlayerManagementServicesIdGameserversGamesWhitelistListWhitelist",
        "tags": [
          "Player_Management"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Remove Player from Whitelist",
        "description": "",
        "operationId": "PlayerManagementServicesIdGameserversGamesWhitelistRemoveFromWhitelist",
        "tags": [
          "Player_Management"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "identifier",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "<p>List of unique player identifiers (accepts comma or semicolon separated list too).</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/games/players/{player_id}": {
      "get": {
        "summary": "Perform action on player",
        "description": "",
        "operationId": "PlayersPlayerIdPerform",
        "tags": [
          "Player_Management"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "player_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The player_id parameter"
          },
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Action type e.g. &quot;delete&quot;</p>"
          },
          {
            "name": "parameters",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>An array of parameters for the specified action</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/games/players/lists": {
      "get": {
        "summary": "List available lists",
        "description": "<p>Return a list of player lists. The result depends of the capabilities of the game itself. The lists can be used to control permissions and other player related settings. If the game does not have this feature, an empty array will be returned, otherwise a list of strings, representing the names of the lists. The player_id_type gives the type of the player identifiers. This can be used to adjust the UI or validate user input.</p>",
        "operationId": "PlayerManagementServicesIdGameserversGamesPlayersListsListPlayerLists",
        "tags": [
          "Player_Management"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/games/players": {
      "get": {
        "summary": "List Players",
        "description": "<p>List players on the server. The returned list contains an array of players with their ingame name and an ID. The given ID is always unique and should be used to identify the player. The player name itself is not unique and can be changed over time (changing name ingame). So always use the ID to identify the player. This ID can be an internal ID or some other kind of ID from the game. For minecraft, it is the Minecraft UUID, for other games it will be the Steam-ID or some other ID to get additional information for that player (avatar image, stats, ...). If the player ID can not be made public, it will be masked (type=internal).</p>",
        "operationId": "PlayerManagementServicesIdGameserversGamesPlayersListPlayers",
        "tags": [
          "Player_Management"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/gameservers/games/players/actionconfig": {
      "get": {
        "summary": "List config of actions",
        "description": "",
        "operationId": "PlayersActionconfigactionconfig",
        "tags": [
          "Player_Management"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/pricing/gameserver": {
      "get": {
        "summary": "Gameserver",
        "description": "",
        "operationId": "PricingGameserver",
        "tags": [
          "Prices"
        ],
        "parameters": [
          {
            "name": "location",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "<p>Select your location ID from the locations list.</p>"
          },
          {
            "name": "currency",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Select your currency.</p>"
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "<p>Select your language.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/pricing/teamspeak3": {
      "get": {
        "summary": "Teamspeak 3",
        "description": "",
        "operationId": "PricingTeamspeak3",
        "tags": [
          "Prices"
        ],
        "parameters": [
          {
            "name": "location",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "<p>Select your location ID from the locations list.</p>"
          },
          {
            "name": "currency",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Select your currency.</p>"
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "<p>Select your language.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/pricing/game": {
      "get": {
        "summary": "Game price info",
        "description": "",
        "operationId": "PricesPricingGamePricingInfoGame",
        "tags": [
          "Prices"
        ],
        "parameters": [
          {
            "name": "short",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>short of the game the information should be about.</p>"
          },
          {
            "name": "duration",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "<p>time in seconds the server duration should be (259200, 2592000, 7776000, 31536000)</p>"
          },
          {
            "name": "currency",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>currency the price should be in</p>"
          },
          {
            "name": "location",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "<p>location id where the gameserver should be hosted.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/pricing/games": {
      "get": {
        "summary": "Games pricing info",
        "description": "",
        "operationId": "PricesPricingGamesPricingInfoGames",
        "tags": [
          "Prices"
        ],
        "parameters": [
          {
            "name": "duration",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "<p>time in seconds the server duration should be (259200, 2592000, 7776000, 31536000)</p>"
          },
          {
            "name": "currency",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>currency the price should be in</p>"
          },
          {
            "name": "location",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "<p>Select your location ID from the locations list.</p>"
          },
          {
            "name": "amount",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "<p>The amount of returned games (max. 300)</p>"
          },
          {
            "name": "sorts",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Sortings. One or multiple of: top,nameAsc,nameDesc,latestgameupdate,recentlyadded,spotlight</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/pricing/games_batch": {
      "get": {
        "summary": "Games price info (several games)",
        "description": "",
        "operationId": "PricesPricingGamesBatchPricingInfoGamesbatch",
        "tags": [
          "Prices"
        ],
        "parameters": [
          {
            "name": "shorts",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>array of shorts of the game the information should be about. Can be set multipe to fetch several games. &amp;short[]=...&amp;short[]=...</p>"
          },
          {
            "name": "duration",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "<p>time in seconds the server duration should be (259200, 2592000, 7776000, 31536000)</p>"
          },
          {
            "name": "currency",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>currency the price should be in</p>"
          },
          {
            "name": "location",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "<p>location id where the gameserver should be hosted.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/order/pricing/gameserver": {
      "get": {
        "summary": "Gameserver",
        "description": "",
        "operationId": "PricingGameserverPricingGameserver",
        "tags": [
          "Pricing"
        ],
        "parameters": [
          {
            "name": "location",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "<p>Select your location ID from the locations list.</p>"
          },
          {
            "name": "sale_service",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "<p>Provide the service ID if you like to switch a service. This returns you the correct price list.</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/order/pricing/teamspeak3": {
      "get": {
        "summary": "Teamspeak 3",
        "description": "",
        "operationId": "PricingTeamspeak3PricingTeamspeak3",
        "tags": [
          "Pricing"
        ],
        "parameters": [
          {
            "name": "location",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "<p>Select your location ID from the locations list.</p>"
          },
          {
            "name": "sale_service",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "<p>Provide the service ID if you like to switch a service. This returns you the correct price list.</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/order/promo_code/{code}": {
      "get": {
        "summary": "Get promotion code information",
        "description": "<p>Possible restriction types:</p> <ul> <li>GAME_SHORTS = whitelisted game_shorts in restriction_params</li> <li>None = no restriction</li> </ul>",
        "operationId": "PromoCodeOrderPromoCodeCodePromoCodeInfo",
        "tags": [
          "Promo_Code"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The code parameter"
          },
          {
            "name": "game_short",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Game short of a game</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/order/promo_code/list/{game_short}": {
      "get": {
        "summary": "Get list of active promotion codes",
        "description": "<p>Get a list of active promotion codes</p> <ul> <li><code>/list</code> fetches a list of all active promotion codes, where restriction_params specify the games for which the code can be used. Promo codes without restriction_type can be used for all games.</li> <li><code>/list/:game_short</code> fetches a list of all active promotion codes for a specific game</li> </ul>",
        "operationId": "PromoCodeOrderPromoCodeListGameShortPromoCodeList",
        "tags": [
          "Promo_Code"
        ],
        "parameters": [
          {
            "name": "game_short",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The game_short parameter"
          },
          {
            "name": "game_short",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Game short of the game for which to get related active promo codes</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/order/promo_code_usage/{service_id}": {
      "delete": {
        "summary": "Delete the promotion code assigned to the service.",
        "description": "<p>Delete the promotion code assigned to the service, it gets unassigned and will not be used on auto extend, etc.</p>",
        "operationId": "PromoCodeOrderPromoCodeUsageServiceIdPromoCodeUsageDelete",
        "tags": [
          "Promo_Code"
        ],
        "parameters": [
          {
            "name": "service_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The service_id parameter"
          },
          {
            "name": "service_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "<p>Id of the service</p>"
          },
          {
            "name": "transaction_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Type of the transaction for which the promotion code is being used (new_order|auto_extend|manual_extend)</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/order/promo_code_usage/has_used/{service_id}/{promo_code}": {
      "get": {
        "summary": "Check if a service has already used the given promotion code",
        "description": "<p>Check if a service has already used the given promotion code</p>",
        "operationId": "ServiceIdPromoCodePromoCodeUsageHasUsed",
        "tags": [
          "Promo_Code"
        ],
        "parameters": [
          {
            "name": "service_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The service_id parameter"
          },
          {
            "name": "promo_code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The promo_code parameter"
          },
          {
            "name": "service_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "<p>Id of the service</p>"
          },
          {
            "name": "promo_code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>The code of promotion to be checked for the service</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/order/promo_code_usage/pending": {
      "get": {
        "summary": "Fetch assigned promotion codes for the services.",
        "description": "<p>Fetch assigned promotion codes for the services.</p>",
        "operationId": "PromoCodeUsagePendingPromoCodeUsagePending",
        "tags": [
          "Promo_Code"
        ],
        "parameters": [
          {
            "name": "service_ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "<p>Ids of the services to get their pending promotion codes</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/registration": {
      "post": {
        "summary": "Register a new User",
        "description": "",
        "operationId": "RegistrationRegistrationCreate",
        "tags": [
          "Registration"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "query",
            "required": true,
            "schema": {
              "type": "object"
            },
            "description": "<p>The user data containing registration related details.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>The content type of the request should be JSON.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "get": {
        "summary": "Captcha Code",
        "description": "<p>Use this Google Invisible reCAPTCHA Code to verify a user registration.</p>",
        "operationId": "RegistrationRegistrationList",
        "tags": [
          "Registration"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/registration/activate": {
      "get": {
        "summary": "Activate the User",
        "description": "",
        "operationId": "DoUserActivation",
        "tags": [
          "Registration"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>The user activation code from the email.</p>"
          },
          {
            "name": "email",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>[Deprecated] The user email address for validation.</p>"
          },
          {
            "name": "uuid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>The users uuid.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/rootservers/{id}/ipmi/ikvm": {
      "get": {
        "summary": "Get IKVM File",
        "description": "<p>Returns the IKVM .jnlp file base64 encoded.</p>",
        "operationId": "RootserverRootserversIdIpmiIkvmGetIKVMFile",
        "tags": [
          "Rootserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/admin/server/vlan/{id}": {
      "get": {
        "summary": "Get current VLAN",
        "description": "",
        "operationId": "RootserverAdminServerVlanIdGetVlanID",
        "tags": [
          "Rootserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/rootservers/{id}/ipmi/ikvm_reset": {
      "post": {
        "summary": "Reset IKVM",
        "description": "",
        "operationId": "RootserverRootserversIdIpmiIkvmResetIKVMReset",
        "tags": [
          "Rootserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/rootservers/list": {
      "get": {
        "summary": "List Rootservers",
        "description": "",
        "operationId": "RootserverRootserversListList",
        "tags": [
          "Rootserver"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "<p>Has to be set for pagination</p>"
          },
          {
            "name": "results_per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "<p>Results per page</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/rootservers/{id}/ipmi/power_off": {
      "post": {
        "summary": "Power off",
        "description": "",
        "operationId": "IpmiPowerOffPowerOff",
        "tags": [
          "Rootserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/rootservers/{id}/ipmi/power_on": {
      "post": {
        "summary": "Power on",
        "description": "",
        "operationId": "IpmiPowerOnPowerOn",
        "tags": [
          "Rootserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/rootservers/{id}/ipmi/reset": {
      "post": {
        "summary": "Power reset",
        "description": "",
        "operationId": "RootserverRootserversIdIpmiResetPowerReset",
        "tags": [
          "Rootserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/rootservers/{id}/ipmi/power": {
      "get": {
        "summary": "Power State",
        "description": "",
        "operationId": "IpmiPowerPowerState",
        "tags": [
          "Rootserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/rootservers/{id}/ipmi/generate_password": {
      "post": {
        "summary": "Generate password",
        "description": "<p>Generate a random password for IPMI user login</p>",
        "operationId": "RootserverRootserversIdIpmiGeneratePasswordSetUser",
        "tags": [
          "Rootserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/rootservers/{id}/shield": {
      "put": {
        "summary": "Nitrado SteelShield",
        "description": "",
        "operationId": "IdShieldSteelShield",
        "tags": [
          "Rootserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "enable",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Enable/disable the Nitrado SteelShield.</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/rootservers/{id}/comment": {
      "put": {
        "summary": "Update comment",
        "description": "",
        "operationId": "RootserverRootserversIdCommentUpdate",
        "tags": [
          "Rootserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "comment",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>New root server comment.</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/user/ssh_keys/{id}": {
      "delete": {
        "summary": "Delete a SSH Key",
        "description": "",
        "operationId": "SSHKeysUserSshKeysIdDeleteSSHKey",
        "tags": [
          "SSH_Keys"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/user/ssh_keys": {
      "get": {
        "summary": "Request all SSH Keys",
        "description": "",
        "operationId": "RequestSSHKeys",
        "tags": [
          "SSH_Keys"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "post": {
        "summary": "Upload a SSH Key",
        "description": "",
        "operationId": "SSHKeysUserSshKeysUploadSSHKey",
        "tags": [
          "SSH_Keys"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>SSH Key</p>"
          },
          {
            "name": "enabled",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Set enabling 'false', defaults to true</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/subdomain": {
      "put": {
        "summary": "Change subdomain",
        "description": "<p>Changes the subdomain of the given service</p>",
        "operationId": "IdSubdomainChangesubdomain",
        "tags": [
          "Service"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "domain_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "<p>the id of the domain the subdomain should be attached to</p>"
          },
          {
            "name": "subdomain",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>the subdomain that should be used</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete subdomain",
        "description": "<p>Deletes the currently set subdomain</p>",
        "operationId": "ServiceServicesIdSubdomainDeletesubdomain",
        "tags": [
          "Service"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "get": {
        "summary": "Get current subdomain",
        "description": "<p>Returns the current set subdomain for this service</p>",
        "operationId": "ServiceServicesIdSubdomainGetcurrentsubdomain",
        "tags": [
          "Service"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}": {
      "delete": {
        "summary": "Delete the service",
        "description": "<p>You only can delete the service if it's suspended otherwise a error will be thrown.</p>",
        "operationId": "ServiceServicesIdDelete",
        "tags": [
          "Service"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "get": {
        "summary": "Service Details",
        "description": "",
        "operationId": "ServiceServicesIdDetails",
        "tags": [
          "Service"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/knowledge_base": {
      "get": {
        "summary": "Get Knowledge Base Articles for Service",
        "description": "<p>Get articles from the knowledge base regarding a specific service</p>",
        "operationId": "ServiceServicesIdKnowledgeBaseGetKnowledgeBaseService",
        "tags": [
          "Service"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "characteristic",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>An issue characteristic from the following list: undecided, restarting-or-crashing, not-installing, unreachable, not-found, no-connection, webinterface-unreachable, lagging, unexpected-rollbacks, data-loss, configuration, connection, kicked-connecting, kicked-playing, other</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/subdomain/domains": {
      "get": {
        "summary": "Get domains",
        "description": "<p>Returns all available domains for registering a subdomain</p>",
        "operationId": "ServiceServicesIdSubdomainDomainsGetdomain",
        "tags": [
          "Service"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services": {
      "get": {
        "summary": "Service List",
        "description": "<h3>Available status codes</h3> <table> <tr>   <th>Status</th>   <th>Description</th> </tr> <tr>   <td>active</td>   <td>The service is active and usable</td> </tr> <tr>   <td>installing</td>   <td>The service is currently installing</td> </tr> <tr>   <td>suspended</td>   <td>The service is suspended and can be reactivated</td> </tr> <tr>   <td>adminlocked</td>   <td>The service is admin locked, please contact support</td> </tr> <tr>   <td>adminlocked_suspended</td>   <td>The service is admin locked and suspended</td> </tr> </table> <h3>Available roles</h3> <table> <tr>   <th>Rule</th>   <th>Description</th> </tr> <tr>   <td>ROLE_OWNER</td>   <td>Default role for the owner of the service. Can trigger all actions.</td> </tr> <tr>   <td>ROLE_GAMESERVER_CHANGE_GAME</td>   <td>Can change server game</td> </tr> <tr>   <td>ROLE_WEBINTERFACE_GENERAL_CONTROL</td>   <td>Can use generic control commands</td> </tr> <tr>   <td>ROLE_WEBINTERFACE_BACKUPS_READ</td>   <td>Can view current backups</td> </tr> <tr>   <td>ROLE_WEBINTERFACE_BACKUPS_WRITE</td>   <td>Can restore available backups</td> </tr> <tr>   <td>ROLE_WEBINTERFACE_DEBUG_CONSOLE_READ</td>   <td>Can view the debug console</td> </tr> <tr>   <td>ROLE_WEBINTERFACE_DEBUG_CONSOLE_WRITE</td>   <td>Can use the debug console</td> </tr> <tr>   <td>ROLE_WEBINTERFACE_FILEBROWSER_READ</td>   <td>Can view/download files from the file server</td> </tr> <tr>   <td>ROLE_WEBINTERFACE_FILEBROWSER_WRITE</td>   <td>Can change/upload files via file server</td> </tr> <tr>   <td>ROLE_WEBINTERFACE_FTP_CREDENTIALS_READ</td>   <td>Can see ftp access credentials</td> </tr> <tr>   <td>ROLE_WEBINTERFACE_FTP_CREDENTIALS_WRITE</td>   <td>Can change ftp access credentials</td> </tr> <tr>   <td>ROLE_WEBINTERFACE_GAME_RCON_READ</td>   <td>Allows a user to send RCON-commands that retrieve infos</td> </tr> <tr>   <td>ROLE_WEBINTERFACE_GAME_RCON_WRITE</td>   <td>Allows a user to send RCON-commands that change settings</td> </tr> <tr>   <td>ROLE_WEBINTERFACE_LOGS_READ</td>   <td>Can see web interface logs</td> </tr> <tr>   <td>ROLE_WEBINTERFACE_MYSQL_CREDENTIALS_READ</td>   <td>Can view MySQL access credentials</td> </tr> <tr>   <td>ROLE_WEBINTERFACE_MYSQL_CREDENTIALS_WRITE</td>   <td>Can change MySQL access credentials</td> </tr> <tr>   <td>ROLE_WEBINTERFACE_SCHEDULED_RESTART_READ</td>   <td>Can view scheduled server restarts</td> </tr> <tr>   <td>ROLE_WEBINTERFACE_SCHEDULED_RESTART_WRITE</td>   <td>Can edit scheduled server restarts</td> </tr> <tr>   <td>ROLE_WEBINTERFACE_SETTINGS_READ</td>   <td>Has access to server settings</td> </tr> <tr>   <td>ROLE_WEBINTERFACE_SETTINGS_WRITE</td>   <td>Can change server settings</td> </tr> <tr>   <td>ROLE_WEBINTERFACE_SERVERPAGE_EDIT</td>   <td>Edit the server page</td> </tr> <tr>   <td>ROLE_WEBINTERFACE_LIVE_COMMANDS</td>   <td>Can execute live commands</td> </tr> <tr>   <td>ROLE_SUPPORT_AUTHORIZATION</td>   <td>Can authorize support to access services</td> </tr> </table>",
        "operationId": "ServiceServicesList",
        "tags": [
          "Service"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/notifications": {
      "get": {
        "summary": "Service Notifications",
        "description": "<p>Returns an array of active notifications relevant for the given service.</p>",
        "operationId": "IdNotificationsNotifications",
        "tags": [
          "Service"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "include_dismissed",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "<p>Set to true if response should include messages dismissed by the user</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/bulk_notifications": {
      "post": {
        "summary": "Service Notifications (Bulk)",
        "description": "<p>Returns active notifications for all given service IDs</p>",
        "operationId": "NotificationsBulk",
        "tags": [
          "Service"
        ],
        "parameters": [
          {
            "name": "service_ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>CSV list of all service IDs to fetch notifications for</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/auto_extend": {
      "get": {
        "summary": "Auto-Extend Information",
        "description": "<p>The looses_benefits attribute will be true if the service will use a different price revision (price might be unchanged) for auto extensions. Payment-Methods from Payment-Service return the selected_autoextend_payment_method_id and the stored_autoextend_payment_method_ids.</p>",
        "operationId": "ServiceServicesIdAutoExtendRequestAutoExtendInformation",
        "tags": [
          "Service"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "post": {
        "summary": "Update Auto-Extend Status",
        "description": "",
        "operationId": "ServiceServicesIdAutoExtendUpdateAutoExtendInformation",
        "tags": [
          "Service"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "auto_extend_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "<p>Provide 0 if you want to disable auto-extend.</p>"
          },
          {
            "name": "rental_time",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "<p>Selected rental time in hours.</p>"
          },
          {
            "name": "autoextend_payment_method_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>The stored payment method ID to use for extending, only for payment-service-API payments</p>"
          },
          {
            "name": "promo_code",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Promotion code to be used for the transaction</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/sale_price": {
      "get": {
        "summary": "Request sale price for Service",
        "description": "",
        "operationId": "IdSalePriceRequestSalePrice",
        "tags": [
          "Service"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/cancel": {
      "post": {
        "summary": "Cancels the service",
        "description": "<p>Canceling the service is not supported for all service types.</p>",
        "operationId": "IdCancelServiceCancel",
        "tags": [
          "Service"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "delete_instantly",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "<p>If set, the service will not be suspended, but immediately deleted.</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/logs": {
      "get": {
        "summary": "Service Logs",
        "description": "",
        "operationId": "IdLogsServiceLogs",
        "tags": [
          "Service"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "<p>The logs page id.</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/comment": {
      "post": {
        "summary": "Update the comment",
        "description": "<p>Update the comment for the service</p>",
        "operationId": "ServiceServicesIdCommentUpdatecomment",
        "tags": [
          "Service"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "comment",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>The comment string or an empty string</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/webinterface_login": {
      "get": {
        "summary": "Webinterface Login",
        "description": "",
        "operationId": "IdWebinterfaceLoginWebinterfaceLogin",
        "tags": [
          "Service"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/support_authorization": {
      "post": {
        "summary": "Creates a support authorization",
        "description": "<p>A support authorization allows the Nitrado Support to access your service for 7 days. <code>This is currently only required for Cloud Servers!</code></p>",
        "operationId": "ServiceSupportServicesIdSupportAuthorizationCreate",
        "tags": [
          "Service_Support"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete the support authorization",
        "description": "",
        "operationId": "ServiceSupportServicesIdSupportAuthorizationDelete",
        "tags": [
          "Service_Support"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "get": {
        "summary": "Show existing support authorization",
        "description": "",
        "operationId": "ServiceSupportServicesIdSupportAuthorizationDetails",
        "tags": [
          "Service_Support"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/tasks": {
      "post": {
        "summary": "Create a Task",
        "description": "",
        "operationId": "ServiceTasksServicesIdTasksCreate",
        "tags": [
          "Service_Tasks"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "action_method",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Defines which action should be performed. See <code>Available Tasks</code> for a full list of available tasks.</p>"
          },
          {
            "name": "action_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Defines the parameter for the task. See <code>Available Tasks</code> for available parameters.</p>"
          },
          {
            "name": "minute",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Minute in cron format. Allowed <code>/^[0-9\\ \\,]+$/</code>.</p>"
          },
          {
            "name": "hour",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Hour in cron format. Allowed <code>/^[0-9\\ \\,\\*]+$/</code>.</p>"
          },
          {
            "name": "day",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Day in cron format. Allowed <code>/^[0-9\\ \\,\\*]+$/</code>.</p>"
          },
          {
            "name": "month",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Month in cron format. Allowed <code>/^[0-9\\ \\,\\*]+$/</code>.</p>"
          },
          {
            "name": "weekday",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Weekday in cron format. Allowed <code>/^[0-9\\ \\,\\*]+$/</code>.</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "get": {
        "summary": "List Tasks",
        "description": "<p>Tasks with status <code>error</code> need to be re-created to activate them again.</p>",
        "operationId": "ServiceTasksServicesIdTasksList",
        "tags": [
          "Service_Tasks"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/tasks/{task_id}": {
      "delete": {
        "summary": "Delete a Task",
        "description": "",
        "operationId": "ServiceTasksServicesIdTasksTaskIdDelete",
        "tags": [
          "Service_Tasks"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The task_id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "put": {
        "summary": "Update a Task",
        "description": "",
        "operationId": "ServiceTasksServicesIdTasksTaskIdUpdate",
        "tags": [
          "Service_Tasks"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The task_id parameter"
          },
          {
            "name": "action_method",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Defines which action should be performed. See <code>Available Tasks</code> for a full list on available tasks.</p>"
          },
          {
            "name": "action_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Defines the parameter for the task. See <code>Available Tasks</code> for available parameters.</p>"
          },
          {
            "name": "minute",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Minute in cron format. Allowed <code>/^[0-9\\ \\,]+$/</code>.</p>"
          },
          {
            "name": "hour",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Hour in cron format. Allowed <code>/^[0-9\\ \\,\\*]+$/</code>.</p>"
          },
          {
            "name": "day",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Day in cron format. Allowed <code>/^[0-9\\ \\,\\*]+$/</code>.</p>"
          },
          {
            "name": "month",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Month in cron format. Allowed <code>/^[0-9\\ \\,\\*]+$/</code>.</p>"
          },
          {
            "name": "weekday",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Weekday in cron format. Allowed <code>/^[0-9\\ \\,\\*]+$/</code>.</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/tasks/list": {
      "get": {
        "summary": "Available Tasks",
        "description": "",
        "operationId": "ServiceTasksServicesIdTasksListTaskAvailableTaskList",
        "tags": [
          "Service_Tasks"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/support/channels": {
      "get": {
        "summary": "List of all support channels",
        "description": "<p>List all support channels and their availability. The field &quot;status&quot; can be &quot;enabled&quot; or &quot;disabled&quot;.</p>",
        "operationId": "SupportSupportChannelsGetSupportChannelAvailability",
        "tags": [
          "Support"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/voiceservers/backup": {
      "post": {
        "summary": "Backup - Create",
        "description": "",
        "operationId": "Teamspeak3ServicesIdVoiceserversBackupBackupCreate",
        "tags": [
          "Teamspeak_3"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/voiceservers/backup/{backup_id}": {
      "delete": {
        "summary": "Backup - Delete",
        "description": "",
        "operationId": "Teamspeak3ServicesIdVoiceserversBackupBackupIdBackupDelete",
        "tags": [
          "Teamspeak_3"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "backup_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The backup_id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "get": {
        "summary": "Backup - Download",
        "description": "<p>Downloads the AES encrypted Teamspeak 3 Backup. The Backup can't be decrypted and can be only used with Nitrado.net Teamspeak 3 servers.</p>",
        "operationId": "Teamspeak3ServicesIdVoiceserversBackupBackupIdBackupDownload",
        "tags": [
          "Teamspeak_3"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "backup_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The backup_id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/voiceservers/backup/{backup_id}/restore": {
      "post": {
        "summary": "Backup - Restore",
        "description": "",
        "operationId": "BackupIdRestoreBackupRestore",
        "tags": [
          "Teamspeak_3"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "backup_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The backup_id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/voiceservers/backup/upload": {
      "post": {
        "summary": "Backup - Upload",
        "description": "<p>Send the the compressed and AES encrypted Nitrado Backup file in Request Body.</p>",
        "operationId": "Teamspeak3ServicesIdVoiceserversBackupUploadBackupUpload",
        "tags": [
          "Teamspeak_3"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/voiceservers/teamspeak3/token": {
      "get": {
        "summary": "Token - Create",
        "description": "",
        "operationId": "Teamspeak3ServicesIdVoiceserversTeamspeak3TokenTokenCreate",
        "tags": [
          "Teamspeak_3"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "sgid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "<p>The Server Group ID for the new Token.</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Token - Delete",
        "description": "",
        "operationId": "Teamspeak3ServicesIdVoiceserversTeamspeak3TokenTokenDelete",
        "tags": [
          "Teamspeak_3"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>The token which should be deleted.</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/voiceservers/whitelist": {
      "post": {
        "summary": "Whitelist - Create",
        "description": "<p>It take some minutes until the whitelist entry will be deployed.</p>",
        "operationId": "Teamspeak3ServicesIdVoiceserversWhitelistWhitelistCreate",
        "tags": [
          "Teamspeak_3"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "ip",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>IPv4 address which should be added to the whitelist.</p>"
          },
          {
            "name": "comment",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>A comment for the whitelist entry.</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Whitelist - Delete",
        "description": "",
        "operationId": "Teamspeak3ServicesIdVoiceserversWhitelistWhitelistDelete",
        "tags": [
          "Teamspeak_3"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "<p>ID of the Whitelist entry which should be deleted.</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "get": {
        "summary": "Whitelist - List",
        "description": "",
        "operationId": "Teamspeak3ServicesIdVoiceserversWhitelistWhitelistList",
        "tags": [
          "Teamspeak_3"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/timezones": {
      "get": {
        "summary": "List all Timezones",
        "description": "",
        "operationId": "TimezoneTimezonesGetTimezones",
        "tags": [
          "Timezone"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/tlds": {
      "get": {
        "summary": "Lists all Tlds",
        "description": "<p>Lists all available Tlds</p>",
        "operationId": "TopLevelDomainsTldsListallTlds",
        "tags": [
          "Top_Level_Domains"
        ],
        "parameters": [
          {
            "name": "provider",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>limit Tlds to a single provider</p>"
          },
          {
            "name": "tld",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>limit Tlds to a single tld</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/toplist/{idOrSlug}/comments": {
      "get": {
        "summary": "List comments for server",
        "description": "<p>Lists comments from users regarding the server</p>",
        "operationId": "ToplistToplistIdOrSlugCommentsGetcomments",
        "tags": [
          "Toplist"
        ],
        "parameters": [
          {
            "name": "idOrSlug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The idOrSlug parameter"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "<p>page of the list to show</p>"
          },
          {
            "name": "results_per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "<p>results to list per page</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/toplist/{idOrSlug}": {
      "get": {
        "summary": "Show server from toplist",
        "description": "<p>Shows information about a server from the toplist</p>",
        "operationId": "ToplistToplistIdOrSlugGetserver",
        "tags": [
          "Toplist"
        ],
        "parameters": [
          {
            "name": "idOrSlug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The idOrSlug parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/toplist": {
      "get": {
        "summary": "List top servers",
        "description": "<p>Lists all top gameservers from the public serverlist.</p>",
        "operationId": "ToplistToplistGettoplist",
        "tags": [
          "Toplist"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "<p>page of the list to show</p>"
          },
          {
            "name": "results_per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "<p>results to list per page</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/toplist/{idOrSlug}/my_favorite": {
      "get": {
        "summary": "Users favorite on this server",
        "description": "<p>If the logged in user has set this server as favorite then return the timestamp when the user did it. Otherwise the result is empty.</p>",
        "operationId": "ToplistToplistIdOrSlugMyFavoriteGetusersfavorite",
        "tags": [
          "Toplist"
        ],
        "parameters": [
          {
            "name": "idOrSlug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The idOrSlug parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/toplist/{idOrSlug}/my_vote": {
      "get": {
        "summary": "Users vote on this server",
        "description": "<p>Returns the logged in users vote on this server</p>",
        "operationId": "ToplistToplistIdOrSlugMyVoteGetusersvote",
        "tags": [
          "Toplist"
        ],
        "parameters": [
          {
            "name": "idOrSlug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The idOrSlug parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/user/two_factor/google": {
      "delete": {
        "summary": "Delete registered Google authenticator device",
        "description": "",
        "operationId": "TwofactorUserTwoFactorGoogleTwofactorgoogledelete",
        "tags": [
          "Two-factor"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Generated update token</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "get": {
        "summary": "Get information for registering Google authenticator (2FA secret)",
        "description": "<p>Use the user update token generated from the user token api to get the Google authentication key here.</p>",
        "operationId": "TwofactorUserTwoFactorGoogleTwofactorgoogleget",
        "tags": [
          "Two-factor"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Generated update token</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "post": {
        "summary": "Verify the Google authenticator code and add the device",
        "description": "",
        "operationId": "TwofactorUserTwoFactorGoogleTwofactorgooglepost",
        "tags": [
          "Two-factor"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Generated update token</p>"
          },
          {
            "name": "code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Two factor authentication code</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/uwp/services/list": {
      "get": {
        "summary": "UWP Service List",
        "description": "<h3>Available status codes</h3> <table> <tr>   <th>Status</th>      <th>Description</th> </tr>      <tr>      <td>active</td>   <td>The service is active and usable</td>      </tr> <tr>   <td>installing</td>      <td>The service is currently installing</td> </tr>      <tr>      <td>suspended</td>   <td>The service is suspended and can be reactivated</td>      </tr> <tr>   <td>adminlocked</td>      <td>The service is admin locked, please contact support</td> </tr>      <tr>      <td>adminlocked_suspended</td>   <td>The service is admin locked and suspended</td>      </tr> </table> <pre><code> &lt;h3&gt;Available roles&lt;/h3&gt; </code></pre> <table> <tr>   <th>Rule</th>      <th>Description</th> </tr>      <tr>      <td>ROLE_GAMESERVER_CHANGE_GAME</td>   <td>Can change server game</td>      </tr> <tr>   <td>ROLE_WEBINTERFACE_GENERAL_CONTROL</td>      <td>Can use generic control commands</td> </tr>      <tr>      <td>ROLE_WEBINTERFACE_BACKUPS_READ</td>   <td>Can view current backups</td>      </tr> <tr>   <td>ROLE_WEBINTERFACE_BACKUPS_WRITE</td>      <td>Can restore available backups</td> </tr>      <tr>      <td>ROLE_WEBINTERFACE_DEBUG_CONSOLE_READ</td>   <td>Can view the debug console</td>      </tr> <tr>   <td>ROLE_WEBINTERFACE_DEBUG_CONSOLE_WRITE</td>      <td>Can use the debug console</td> </tr>      <tr>      <td>ROLE_WEBINTERFACE_FILEBROWSER_READ</td>   <td>Can view/download files from the file server</td> </tr>      <tr>      <td>ROLE_WEBINTERFACE_FILEBROWSER_WRITE</td>   <td>Can change/upload files via file server</td> </tr>      <tr>      <td>ROLE_WEBINTERFACE_FTP_CREDENTIALS_READ</td>   <td>Can see ftp access credentials</td>      </tr> <tr>   <td>ROLE_WEBINTERFACE_FTP_CREDENTIALS_WRITE</td>      <td>Can change ftp access credentials</td> </tr>      <tr>      <td>ROLE_WEBINTERFACE_GAME_RCON_READ</td>   <td>Allows a user to send RCON-commands that retrieve infos</td>      </tr> <tr>   <td>ROLE_WEBINTERFACE_GAME_RCON_WRITE</td>      <td>Allows a user to send RCON-commands that change settings</td> </tr>      <tr>      <td>ROLE_WEBINTERFACE_LOGS_READ</td>   <td>Can see web interface logs</td>      </tr> <tr>   <td>ROLE_WEBINTERFACE_MYSQL_CREDENTIALS_READ</td>      <td>Can view MySQL access credentials</td> </tr>      <tr>      <td>ROLE_WEBINTERFACE_MYSQL_CREDENTIALS_WRITE</td>   <td>Can change MySQL access credentials</td>      </tr> <tr>   <td>ROLE_WEBINTERFACE_SCHEDULED_RESTART_READ</td>      <td>Can view scheduled server restarts</td> </tr>      <tr>      <td>ROLE_WEBINTERFACE_SCHEDULED_RESTART_WRITE</td>   <td>Can edit scheduled server restarts</td>      </tr> <tr>   <td>ROLE_WEBINTERFACE_SETTINGS_READ</td>      <td>Has access to server settings</td> </tr>      <tr>      <td>ROLE_WEBINTERFACE_SETTINGS_WRITE</td>   <td>Can change server settings</td>      </tr> <tr>   <td>ROLE_WEBINTERFACE_SERVERPAGE_EDIT</td>      <td>Edit the server page</td> </tr>      <tr>      <td>ROLE_WEBINTERFACE_LIVE_COMMANDS</td>   <td>Can execute live commands</td>      </tr> <tr>   <td>ROLE_SUPPORT_AUTHORIZATION</td>      <td>Can authorize support to access services</td> </tr>      </table>",
        "operationId": "UWPUwpServicesListList",
        "tags": [
          "UWP"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/user": {
      "get": {
        "summary": "User Details",
        "description": "",
        "operationId": "UserUserDetailsGet",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "post": {
        "summary": "Update User",
        "description": "",
        "operationId": "UserUserUpdate",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>The current User Update Token.</p>"
          },
          {
            "name": "password",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>A new account password.</p>"
          },
          {
            "name": "username",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>A new username.</p>"
          },
          {
            "name": "timezone",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>A new User Timezone.</p>"
          },
          {
            "name": "donations",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Set it to true to receive donations.</p>"
          },
          {
            "name": "profile",
            "in": "query",
            "required": false,
            "schema": {
              "type": "object"
            },
            "description": "<p>Set user profile data, allowed keys are 'name', 'street', 'postcode', 'city', 'country', 'state', 'newsletter'</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/user/account_overview": {
      "get": {
        "summary": "Request User Account Overview",
        "description": "",
        "operationId": "UserUserAccountOverviewGetAccountOverview",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/countries": {
      "get": {
        "summary": "List all Countries",
        "description": "",
        "operationId": "UserCountriesGetCountries",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>The 2-character locale (de, es, en) or 3-character language (like deu, spa, eng). Optional. Uses the user's language - if an auth-token is given</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/countries/states": {
      "get": {
        "summary": "List US states",
        "description": "",
        "operationId": "UserCountriesStatesGetUSStates",
        "tags": [
          "User"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/user/token": {
      "post": {
        "summary": "Request User Update Token",
        "description": "<p>A user update token can be used to change user profile information.</p>",
        "operationId": "UserUserTokenGetUserUpdateToken",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "password",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>The current user password.</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/voucher/redeem": {
      "post": {
        "summary": "Voucher redeem",
        "description": "<p>Redeem product vouchers and credit vouchers.</p>",
        "operationId": "RedeemVoucher",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Voucher code</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/user/resend_activation": {
      "get": {
        "summary": "ResendActivation",
        "description": "<p>Resends the activation email for the current user if the user is not yet enabled. Has a timeout of 10 minutes to prevent abuse.</p>",
        "operationId": "UserUserResendActivationResendActivation",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/user/language": {
      "post": {
        "summary": "Update the user language",
        "description": "",
        "operationId": "UserUserLanguageUpdatelanguage",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "language",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>The new language value. One of [spa deu eng fre pol ita dut arg usa]</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/user/verify_country_and_state": {
      "post": {
        "summary": "Verify the user's country and state",
        "description": "<p>This method may only be invoked if the user has manually confirmed their residence, meaning that the values &quot;country&quot; and &quot;state&quot; in the user profile are correct.</p> <pre><code>Country and state can also be passed as optional parameters, assigning the respective values in the user profile.  This operation does nothing if the user already verified their country and state.</code></pre>",
        "operationId": "VerifyCountryAndState",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "country",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>The user country. Optional</p>"
          },
          {
            "name": "state",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>The user state. Optional</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/user/deletion/possible": {
      "get": {
        "summary": "Check if a deletion is possible",
        "description": "",
        "operationId": "UserDeletionUserDeletionPossibleCheckaccountdeletionpossible",
        "tags": [
          "User_Deletion"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/user/deletion/confirm": {
      "post": {
        "summary": "Confirm an account deletion process",
        "description": "",
        "operationId": "DeletionConfirmConfirmaccountdeletionprocess",
        "tags": [
          "User_Deletion"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Account deletion confirmation code</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/user/deletion/start": {
      "post": {
        "summary": "Start the account deletion process for the current user",
        "description": "",
        "operationId": "UserDeletionUserDeletionStartStartaccountdeletionprocess",
        "tags": [
          "User_Deletion"
        ],
        "parameters": [
          {
            "name": "confirm_deletion",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "<p>Confirm the account deletion with true or 1</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/user/phone": {
      "post": {
        "summary": "Add phone number",
        "description": "",
        "operationId": "UserPhoneUserPhoneCreate",
        "tags": [
          "User_Phone"
        ],
        "parameters": [
          {
            "name": "number",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Phone number with country code</p>"
          },
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>The current User Update Token.</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete number",
        "description": "",
        "operationId": "UserPhoneUserPhoneDelete",
        "tags": [
          "User_Phone"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>The current User Update Token.</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/user/phone/verify": {
      "post": {
        "summary": "Verify number",
        "description": "",
        "operationId": "PhoneVerifyVerify",
        "tags": [
          "User_Phone"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Verification code from SMS</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/voiceservers": {
      "get": {
        "summary": "Voiceserver Details",
        "description": "",
        "operationId": "VoiceserverServicesIdVoiceserversDetails",
        "tags": [
          "Voiceserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "post": {
        "summary": "Update",
        "description": "<table> <tr>   <th>Key</th>   <th>Supported Types</th>   <th>Description</th> </tr> </table>",
        "operationId": "VoiceserverServicesIdVoiceserversUpdate",
        "tags": [
          "Voiceserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "key",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Setting Key</p>"
          },
          {
            "name": "value",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Setting value</p>"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "<p>Media type matching content-type of request body. Possible media types: application/json, application/x-www-form-urlencoded or multipart/form-data</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/voiceservers/reinstall": {
      "post": {
        "summary": "Reinstall",
        "description": "",
        "operationId": "VoiceserversReinstallReinstall",
        "tags": [
          "Voiceserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/voiceservers/restart": {
      "post": {
        "summary": "Restart",
        "description": "",
        "operationId": "VoiceserverServicesIdVoiceserversRestartRestart",
        "tags": [
          "Voiceserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/services/{id}/voiceservers/stop": {
      "post": {
        "summary": "Stop",
        "description": "",
        "operationId": "VoiceserverServicesIdVoiceserversStopStop",
        "tags": [
          "Voiceserver"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id parameter"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "<p>Provide your access token here, alternatively you can pass it as GET Parameter.</p>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {},
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "description": "Bearer token authentication"
      }
    }
  }
}