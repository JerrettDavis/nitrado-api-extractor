name: Extract and Publish API Spec

on:
  push:
    branches: [ main ]
  schedule:
    # Run every 6 hours to check for updates
    - cron: '0 */6 * * *'
  workflow_dispatch:
    inputs:
      force_update:
        description: 'Force update even if no changes detected'
        required: false
        default: false
        type: boolean

jobs:
  extract-and-publish:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Create output directory
      run: mkdir -p output
    
    - name: Extract API data
      env:
        NITRADO_API_URL: ${{ secrets.NITRADO_API_URL || 'https://doc.nitrado.net/api_data.js?v=1752345280167' }}
        NITRADO_OUTPUT_DIR: ./output
        NITRADO_API_TITLE: ${{ secrets.NITRADO_API_TITLE || 'Nitrado API' }}
        NITRADO_API_DESCRIPTION: ${{ secrets.NITRADO_API_DESCRIPTION || 'Official Nitrado API for managing game servers, domains, and other services' }}
        NITRADO_API_VERSION: ${{ secrets.NITRADO_API_VERSION || '1.0.0' }}
        NITRADO_SERVER_URL: ${{ secrets.NITRADO_SERVER_URL || 'https://api.nitrado.net' }}
        NITRADO_CONTACT_NAME: ${{ secrets.NITRADO_CONTACT_NAME || 'Nitrado Support' }}
        NITRADO_CONTACT_URL: ${{ secrets.NITRADO_CONTACT_URL || 'https://nitrado.net/support' }}
        NITRADO_LICENSE_URL: ${{ secrets.NITRADO_LICENSE_URL || 'https://nitrado.net/terms' }}
      run: npm run extract
    
    - name: Validate OpenAPI spec
      run: npm run validate
    
    - name: Check for changes
      id: changes
      run: |
        if [ -f output/nitrado-openapi.json ]; then
          git add output/
          if git diff --cached --quiet; then
            echo "No changes detected"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected"
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi
        else
          echo "New files created"
          echo "has_changes=true" >> $GITHUB_OUTPUT
        fi
    
    - name: Commit and push changes
      if: steps.changes.outputs.has_changes == 'true' || github.event.inputs.force_update == 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add output/
        git commit -m "chore: update Nitrado API specification [skip ci]" || exit 0
        git push
    
    - name: Create Release
      if: steps.changes.outputs.has_changes == 'true' || github.event.inputs.force_update == 'true'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: api-spec-${{ github.run_number }}
        release_name: API Specification Update ${{ github.run_number }}
        body: |
          Automated update of Nitrado API specification
          
          Generated from: ${{ env.NITRADO_API_URL }}
          Generated at: ${{ github.run_time }}
          
          Files updated:
          - output/nitrado-api.json
          - output/nitrado-openapi.json
        draft: false
        prerelease: false
    
    - name: Upload API Specification
      if: steps.changes.outputs.has_changes == 'true' || github.event.inputs.force_update == 'true'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: output/nitrado-openapi.json
        asset_name: nitrado-openapi.json
        asset_content_type: application/json